
-- Primordial UI Library for Roblox
-- Version 1.0.0

local Library = {}
Library.__index = Library

local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local CoreGui = game:GetService("CoreGui")

local Player = Players.LocalPlayer
local Mouse = Player:GetMouse()

-- UI Configuration
local Config = {
    Theme = {
        Background = Color3.fromRGB(25, 25, 25),
        SecondaryBackground = Color3.fromRGB(35, 35, 35),
        TertiaryBackground = Color3.fromRGB(45, 45, 45),
        Text = Color3.fromRGB(255, 255, 255),
        SubText = Color3.fromRGB(180, 180, 180),
        Accent = Color3.fromRGB(100, 149, 237),
        Border = Color3.fromRGB(60, 60, 60),
        SliderFill = Color3.fromRGB(100, 149, 237),
        CheckboxChecked = Color3.fromRGB(100, 149, 237),
        TabActive = Color3.fromRGB(100, 149, 237),
        TabInactive = Color3.fromRGB(70, 70, 70)
    },
    Sizes = {
        WindowWidth = 800,
        WindowHeight = 600,
        SidebarWidth = 60,
        TopBarHeight = 35,
        BottomBarHeight = 50,
        SectionPadding = 10,
        ElementHeight = 30,
        ElementSpacing = 5
    },
    Animations = {
        TweenTime = 0.3,
        EasingStyle = Enum.EasingStyle.Quad,
        EasingDirection = Enum.EasingDirection.Out
    }
}

-- Utility Functions
local function CreateTween(instance, properties, duration)
    duration = duration or Config.Animations.TweenTime
    local tween = TweenService:Create(
        instance,
        TweenInfo.new(duration, Config.Animations.EasingStyle, Config.Animations.EasingDirection),
        properties
    )
    tween:Play()
    return tween
end

local function MakeDraggable(frame, handle)
    handle = handle or frame
    local dragging, dragInput, dragStart, startPos
    
    local function update(input)
        local delta = input.Position - dragStart
        frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
    
    handle.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    
    handle.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            update(input)
        end
    end)
end

-- Main Library Functions
function Library:CreateWindow(options)
    options = options or {}
    local window = {}
    window.Tabs = {}
    window.ActiveTab = nil
    
    -- Create ScreenGui
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "PrimordialUI"
    screenGui.ResetOnSpawn = false
    screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    screenGui.Parent = CoreGui
    
    -- Main Frame
    local mainFrame = Instance.new("Frame")
    mainFrame.Name = "MainWindow"
    mainFrame.Size = UDim2.new(0, Config.Sizes.WindowWidth, 0, Config.Sizes.WindowHeight)
    mainFrame.Position = UDim2.new(0.5, -Config.Sizes.WindowWidth/2, 0.5, -Config.Sizes.WindowHeight/2)
    mainFrame.BackgroundColor3 = Config.Theme.Background
    mainFrame.BackgroundTransparency = 0.05
    mainFrame.BorderSizePixel = 0
    mainFrame.Parent = screenGui
    
    -- Add rounded corners
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = mainFrame
    
    -- Add shadow
    local shadow = Instance.new("ImageLabel")
    shadow.Name = "Shadow"
    shadow.BackgroundTransparency = 1
    shadow.Position = UDim2.new(0, -15, 0, -15)
    shadow.Size = UDim2.new(1, 30, 1, 30)
    shadow.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"
    shadow.ImageColor3 = Color3.new(0, 0, 0)
    shadow.ImageTransparency = 0.5
    shadow.Parent = mainFrame
    shadow.ZIndex = -1
    
    -- Top Bar
    local topBar = Instance.new("Frame")
    topBar.Name = "TopBar"
    topBar.Size = UDim2.new(1, 0, 0, Config.Sizes.TopBarHeight)
    topBar.BackgroundColor3 = Config.Theme.SecondaryBackground
    topBar.BorderSizePixel = 0
    topBar.Parent = mainFrame
    
    local topBarCorner = Instance.new("UICorner")
    topBarCorner.CornerRadius = UDim.new(0, 8)
    topBarCorner.Parent = topBar
    
    -- Title
    local title = Instance.new("TextLabel")
    title.Name = "Title"
    title.Text = options.Title or "primordial"
    title.Size = UDim2.new(1, 0, 1, 0)
    title.BackgroundTransparency = 1
    title.TextColor3 = Config.Theme.Text
    title.TextScaled = false
    title.TextSize = 16
    title.Font = Enum.Font.Gotham
    title.Parent = topBar
    
    MakeDraggable(mainFrame, topBar)
    
    -- Left Sidebar
    local sidebar = Instance.new("Frame")
    sidebar.Name = "Sidebar"
    sidebar.Position = UDim2.new(0, 0, 0, Config.Sizes.TopBarHeight)
    sidebar.Size = UDim2.new(0, Config.Sizes.SidebarWidth, 1, -Config.Sizes.TopBarHeight - Config.Sizes.BottomBarHeight)
    sidebar.BackgroundColor3 = Config.Theme.SecondaryBackground
    sidebar.BorderSizePixel = 0
    sidebar.Parent = mainFrame
    
    -- Logo
    local logo = Instance.new("ImageLabel")
    logo.Name = "Logo"
    logo.Size = UDim2.new(0, 40, 0, 40)
    logo.Position = UDim2.new(0.5, -20, 0, 10)
    logo.BackgroundTransparency = 1
    logo.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png" -- Replace with actual logo
    logo.Parent = sidebar
    
    -- Sidebar Tabs Container
    local sidebarTabs = Instance.new("Frame")
    sidebarTabs.Name = "SidebarTabs"
    sidebarTabs.Position = UDim2.new(0, 0, 0, 60)
    sidebarTabs.Size = UDim2.new(1, 0, 1, -60)
    sidebarTabs.BackgroundTransparency = 1
    sidebarTabs.Parent = sidebar
    
    local sidebarLayout = Instance.new("UIListLayout")
    sidebarLayout.SortOrder = Enum.SortOrder.LayoutOrder
    sidebarLayout.Padding = UDim.new(0, 5)
    sidebarLayout.Parent = sidebarTabs
    
    -- Content Area
    local contentArea = Instance.new("Frame")
    contentArea.Name = "ContentArea"
    contentArea.Position = UDim2.new(0, Config.Sizes.SidebarWidth, 0, Config.Sizes.TopBarHeight)
    contentArea.Size = UDim2.new(1, -Config.Sizes.SidebarWidth, 1, -Config.Sizes.TopBarHeight - Config.Sizes.BottomBarHeight)
    contentArea.BackgroundTransparency = 1
    contentArea.Parent = mainFrame
    
    -- Bottom Navigation Bar
    local bottomBar = Instance.new("Frame")
    bottomBar.Name = "BottomBar"
    bottomBar.Position = UDim2.new(0, 0, 1, -Config.Sizes.BottomBarHeight)
    bottomBar.Size = UDim2.new(1, 0, 0, Config.Sizes.BottomBarHeight)
    bottomBar.BackgroundColor3 = Config.Theme.SecondaryBackground
    bottomBar.BorderSizePixel = 0
    bottomBar.Parent = mainFrame
    
    local bottomBarLayout = Instance.new("UIListLayout")
    bottomBarLayout.FillDirection = Enum.FillDirection.Horizontal
    bottomBarLayout.SortOrder = Enum.SortOrder.LayoutOrder
    bottomBarLayout.Padding = UDim.new(0, 0)
    bottomBarLayout.Parent = bottomBar
    
    -- Window Methods
    function window:CreateTab(name, icon)
        local tab = {}
        tab.Name = name
        tab.Sections = {}
        
        -- Create tab button in sidebar
        local tabButton = Instance.new("TextButton")
        tabButton.Name = name
        tabButton.Size = UDim2.new(1, 0, 0, 40)
        tabButton.BackgroundColor3 = Config.Theme.TabInactive
        tabButton.BackgroundTransparency = 0.7
        tabButton.BorderSizePixel = 0
        tabButton.Text = name
        tabButton.TextColor3 = Config.Theme.SubText
        tabButton.TextSize = 12
        tabButton.Font = Enum.Font.Gotham
        tabButton.Parent = sidebarTabs
        
        -- Create tab content frame
        local tabContent = Instance.new("ScrollingFrame")
        tabContent.Name = name .. "Content"
        tabContent.Size = UDim2.new(1, -10, 1, -10)
        tabContent.Position = UDim2.new(0, 5, 0, 5)
        tabContent.BackgroundTransparency = 1
        tabContent.BorderSizePixel = 0
        tabContent.ScrollBarThickness = 4
        tabContent.ScrollBarImageColor3 = Config.Theme.Accent
        tabContent.Visible = false
        tabContent.Parent = contentArea
        
        local contentLayout = Instance.new("UIGridLayout")
        contentLayout.CellSize = UDim2.new(0.31, 0, 0, 200)
        contentLayout.CellPadding = UDim2.new(0.02, 0, 0, 10)
        contentLayout.SortOrder = Enum.SortOrder.LayoutOrder
        contentLayout.Parent = tabContent
        
        -- Tab selection
        tabButton.MouseButton1Click:Connect(function()
            window:SelectTab(tab)
        end)
        
        -- Section creation
        function tab:CreateSection(sectionName)
            local section = {}
            section.Elements = {}
            
            local sectionFrame = Instance.new("Frame")
            sectionFrame.Name = sectionName
            sectionFrame.BackgroundColor3 = Config.Theme.TertiaryBackground
            sectionFrame.BackgroundTransparency = 0.3
            sectionFrame.BorderSizePixel = 0
            sectionFrame.Parent = tabContent
            
            local sectionCorner = Instance.new("UICorner")
            sectionCorner.CornerRadius = UDim.new(0, 6)
            sectionCorner.Parent = sectionFrame
            
            local sectionTitle = Instance.new("TextLabel")
            sectionTitle.Name = "Title"
            sectionTitle.Text = sectionName
            sectionTitle.Size = UDim2.new(1, -10, 0, 25)
            sectionTitle.Position = UDim2.new(0, 5, 0, 5)
            sectionTitle.BackgroundTransparency = 1
            sectionTitle.TextColor3 = Config.Theme.Text
            sectionTitle.TextSize = 14
            sectionTitle.Font = Enum.Font.GothamBold
            sectionTitle.TextXAlignment = Enum.TextXAlignment.Left
            sectionTitle.Parent = sectionFrame
            
            local elementContainer = Instance.new("Frame")
            elementContainer.Name = "Elements"
            elementContainer.Position = UDim2.new(0, 5, 0, 30)
            elementContainer.Size = UDim2.new(1, -10, 1, -35)
            elementContainer.BackgroundTransparency = 1
            elementContainer.Parent = sectionFrame
            
            local elementLayout = Instance.new("UIListLayout")
            elementLayout.SortOrder = Enum.SortOrder.LayoutOrder
            elementLayout.Padding = UDim.new(0, 5)
            elementLayout.Parent = elementContainer
            
            -- Element creation methods
            function section:CreateCheckbox(options)
                options = options or {}
                local checkbox = {}
                checkbox.Value = options.Default or false
                checkbox.Callback = options.Callback or function() end
                
                local checkboxFrame = Instance.new("Frame")
                checkboxFrame.Name = options.Name or "Checkbox"
                checkboxFrame.Size = UDim2.new(1, 0, 0, Config.Sizes.ElementHeight)
                checkboxFrame.BackgroundTransparency = 1
                checkboxFrame.Parent = elementContainer
                
                local checkboxButton = Instance.new("TextButton")
                checkboxButton.Size = UDim2.new(0, 20, 0, 20)
                checkboxButton.Position = UDim2.new(0, 0, 0.5, -10)
                checkboxButton.BackgroundColor3 = Config.Theme.Border
                checkboxButton.BorderSizePixel = 0
                checkboxButton.Text = ""
                checkboxButton.Parent = checkboxFrame
                
                local checkboxCorner = Instance.new("UICorner")
                checkboxCorner.CornerRadius = UDim.new(0, 4)
                checkboxCorner.Parent = checkboxButton
                
                local checkmark = Instance.new("Frame")
                checkmark.Name = "Checkmark"
                checkmark.Size = UDim2.new(1, -4, 1, -4)
                checkmark.Position = UDim2.new(0, 2, 0, 2)
                checkmark.BackgroundColor3 = Config.Theme.CheckboxChecked
                checkmark.BorderSizePixel = 0
                checkmark.Visible = checkbox.Value
                checkmark.Parent = checkboxButton
                
                local checkmarkCorner = Instance.new("UICorner")
                checkmarkCorner.CornerRadius = UDim.new(0, 3)
                checkmarkCorner.Parent = checkmark
                
                local label = Instance.new("TextLabel")
                label.Text = options.Name or "Checkbox"
                label.Position = UDim2.new(0, 25, 0, 0)
                label.Size = UDim2.new(1, -25, 1, 0)
                label.BackgroundTransparency = 1
                label.TextColor3 = Config.Theme.Text
                label.TextSize = 13
                label.Font = Enum.Font.Gotham
                label.TextXAlignment = Enum.TextXAlignment.Left
                label.Parent = checkboxFrame
                
                -- Color picker support
                if options.ColorPicker then
                    local colorButton = Instance.new("TextButton")
                    colorButton.Size = UDim2.new(0, 30, 0, 20)
                    colorButton.Position = UDim2.new(1, -35, 0.5, -10)
                    colorButton.BackgroundColor3 = options.ColorPicker.Default or Color3.new(1, 1, 1)
                    colorButton.BorderSizePixel = 0
                    colorButton.Text = ""
                    colorButton.Parent = checkboxFrame
                    
                    local colorCorner = Instance.new("UICorner")
                    colorCorner.CornerRadius = UDim.new(0, 4)
                    colorCorner.Parent = colorButton
                    
                    colorButton.MouseButton1Click:Connect(function()
                        -- Open color picker
                        window:CreateColorPicker({
                            Default = colorButton.BackgroundColor3,
                            Callback = function(color)
                                colorButton.BackgroundColor3 = color
                                if options.ColorPicker.Callback then
                                    options.ColorPicker.Callback(color)
                                end
                            end
                        })
                    end)
                end
                
                function checkbox:Set(value)
                    checkbox.Value = value
                    checkmark.Visible = value
                    checkbox.Callback(value)
                end
                
                checkboxButton.MouseButton1Click:Connect(function()
                    checkbox:Set(not checkbox.Value)
                end)
                
                return checkbox
            end
            
            function section:CreateSlider(options)
                options = options or {}
                local slider = {}
                slider.Value = options.Default or options.Min or 0
                slider.Callback = options.Callback or function() end
                
                local sliderFrame = Instance.new("Frame")
                sliderFrame.Name = options.Name or "Slider"
                sliderFrame.Size = UDim2.new(1, 0, 0, Config.Sizes.ElementHeight + 20)
                sliderFrame.BackgroundTransparency = 1
                sliderFrame.Parent = elementContainer
                
                local label = Instance.new("TextLabel")
                label.Text = options.Name or "Slider"
                label.Size = UDim2.new(1, 0, 0, 20)
                label.BackgroundTransparency = 1
                label.TextColor3 = Config.Theme.Text
                label.TextSize = 13
                label.Font = Enum.Font.Gotham
                label.TextXAlignment = Enum.TextXAlignment.Left
                label.Parent = sliderFrame
                
                local valueLabel = Instance.new("TextLabel")
                valueLabel.Text = tostring(slider.Value) .. (options.Suffix or "")
                valueLabel.Size = UDim2.new(0, 50, 0, 20)
                valueLabel.Position = UDim2.new(1, -50, 0, 0)
                valueLabel.BackgroundTransparency = 1
                valueLabel.TextColor3 = Config.Theme.SubText
                valueLabel.TextSize = 13
                valueLabel.Font = Enum.Font.Gotham
                valueLabel.TextXAlignment = Enum.TextXAlignment.Right
                valueLabel.Parent = sliderFrame
                
                local sliderBar = Instance.new("Frame")
                sliderBar.Size = UDim2.new(1, 0, 0, 6)
                sliderBar.Position = UDim2.new(0, 0, 0, 25)
                sliderBar.BackgroundColor3 = Config.Theme.Border
                sliderBar.BorderSizePixel = 0
                sliderBar.Parent = sliderFrame
                
                local sliderCorner = Instance.new("UICorner")
                sliderCorner.CornerRadius = UDim.new(0, 3)
                sliderCorner.Parent = sliderBar
                
                local sliderFill = Instance.new("Frame")
                sliderFill.Size = UDim2.new(0.5, 0, 1, 0)
                sliderFill.BackgroundColor3 = Config.Theme.SliderFill
                sliderFill.BorderSizePixel = 0
                sliderFill.Parent = sliderBar
                
                local fillCorner = Instance.new("UICorner")
                fillCorner.CornerRadius = UDim.new(0, 3)
                fillCorner.Parent = sliderFill
                
                local sliderButton = Instance.new("TextButton")
                sliderButton.Size = UDim2.new(0, 12, 0, 12)
                sliderButton.Position = UDim2.new(0.5, -6, 0.5, -6)
                sliderButton.BackgroundColor3 = Config.Theme.Text
                sliderButton.BorderSizePixel = 0
                sliderButton.Text = ""
                sliderButton.Parent = sliderBar
                
                local buttonCorner = Instance.new("UICorner")
                buttonCorner.CornerRadius = UDim.new(1, 0)
                buttonCorner.Parent = sliderButton
                
                local function updateSlider(input)
                    local min = options.Min or 0
                    local max = options.Max or 100
                    local mousePos = UserInputService:GetMouseLocation()
                    local relativePos = mousePos.X - sliderBar.AbsolutePosition.X
                    local percentage = math.clamp(relativePos / sliderBar.AbsoluteSize.X, 0, 1)
                    
                    slider.Value = math.floor(min + (max - min) * percentage)
                    sliderFill.Size = UDim2.new(percentage, 0, 1, 0)
                    sliderButton.Position = UDim2.new(percentage, -6, 0.5, -6)
                    valueLabel.Text = tostring(slider.Value) .. (options.Suffix or "")
                    slider.Callback(slider.Value)
                end
                
                local dragging = false
                
                sliderButton.MouseButton1Down:Connect(function()
                    dragging = true
                end)
                
                sliderBar.InputBegan:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        dragging = true
                        updateSlider(input)
                    end
                end)
                
                UserInputService.InputEnded:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        dragging = false
                    end
                end)
                
                UserInputService.InputChanged:Connect(function(input)
                    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                        updateSlider(input)
                    end
                end)
                
                function slider:Set(value)
                    local min = options.Min or 0
                    local max = options.Max or 100
                    slider.Value = math.clamp(value, min, max)
                    local percentage = (slider.Value - min) / (max - min)
                    sliderFill.Size = UDim2.new(percentage, 0, 1, 0)
                    sliderButton.Position = UDim2.new(percentage, -6, 0.5, -6)
                    valueLabel.Text = tostring(slider.Value) .. (options.Suffix or "")
                    slider.Callback(slider.Value)
                end
                
                slider:Set(slider.Value)
                
                return slider
            end
            
            function section:CreateDropdown(options)
                options = options or {}
                local dropdown = {}
                dropdown.Value = options.Default or (options.Options[1] or "")
                dropdown.Callback = options.Callback or function() end
                dropdown.Open = false
                
                local dropdownFrame = Instance.new("Frame")
                dropdownFrame.Name = options.Name or "Dropdown"
                dropdownFrame.Size = UDim2.new(1, 0, 0, Config.Sizes.ElementHeight)
                dropdownFrame.BackgroundTransparency = 1
                dropdownFrame.Parent = elementContainer
                
                local label = Instance.new("TextLabel")
                label.Text = options.Name or "Dropdown"
                label.Size = UDim2.new(0.4, 0, 1, 0)
                label.BackgroundTransparency = 1
                label.TextColor3 = Config.Theme.Text
                label.TextSize = 13
                label.Font = Enum.Font.Gotham
                label.TextXAlignment = Enum.TextXAlignment.Left
                label.Parent = dropdownFrame
                
                local dropdownButton = Instance.new("TextButton")
                dropdownButton.Size = UDim2.new(0.6, -5, 1, 0)
                dropdownButton.Position = UDim2.new(0.4, 5, 0, 0)
                dropdownButton.BackgroundColor3 = Config.Theme.Border
                dropdownButton.BorderSizePixel = 0
                dropdownButton.Text = dropdown.Value
                dropdownButton.TextColor3 = Config.Theme.Text
                dropdownButton.TextSize = 12
                dropdownButton.Font = Enum.Font.Gotham
                dropdownButton.Parent = dropdownFrame
                
                local dropdownCorner = Instance.new("UICorner")
                dropdownCorner.CornerRadius = UDim.new(0, 4)
                dropdownCorner.Parent = dropdownButton
                
                local dropdownList = Instance.new("Frame")
                dropdownList.Size = UDim2.new(0.6, -5, 0, #options.Options * 25)
                dropdownList.Position = UDim2.new(0.4, 5, 1, 5)
                dropdownList.BackgroundColor3 = Config.Theme.TertiaryBackground
                dropdownList.BorderSizePixel = 0
                dropdownList.Visible = false
                dropdownList.ZIndex = 10
                dropdownList.Parent = dropdownFrame
                
                local listCorner = Instance.new("UICorner")
                listCorner.CornerRadius = UDim.new(0, 4)
                listCorner.Parent = dropdownList
                
                local listLayout = Instance.new("UIListLayout")
                listLayout.SortOrder = Enum.SortOrder.LayoutOrder
                listLayout.Parent = dropdownList
                
                for _, option in ipairs(options.Options or {}) do
                    local optionButton = Instance.new("TextButton")
                    optionButton.Size = UDim2.new(1, 0, 0, 25)
                    optionButton.BackgroundTransparency = 1
                    optionButton.Text = option
                    optionButton.TextColor3 = Config.Theme.SubText
                    optionButton.TextSize = 12
                    optionButton.Font = Enum.Font.Gotham
                    optionButton.Parent = dropdownList
                    
                    optionButton.MouseEnter:Connect(function()
                        optionButton.TextColor3 = Config.Theme.Text
                    end)
                    
                    optionButton.MouseLeave:Connect(function()
                        optionButton.TextColor3 = Config.Theme.SubText
                    end)
                    
                    optionButton.MouseButton1Click:Connect(function()
                        dropdown.Value = option
                        dropdownButton.Text = option
                        dropdownList.Visible = false
                        dropdown.Open = false
                        dropdown.Callback(option)
                    end)
                end
                
                dropdownButton.MouseButton1Click:Connect(function()
                    dropdown.Open = not dropdown.Open
                    dropdownList.Visible = dropdown.Open
                end)
                
                return dropdown
            end
            
            function section:CreateButton(options)
                options = options or {}
                local button = {}
                button.Callback = options.Callback or function() end
                
                local buttonFrame = Instance.new("TextButton")
                buttonFrame.Name = options.Name or "Button"
                buttonFrame.Size = UDim2.new(1, 0, 0, Config.Sizes.ElementHeight)
                buttonFrame.BackgroundColor3 = Config.Theme.Accent
                buttonFrame.BorderSizePixel = 0
                buttonFrame.Text = options.Name or "Button"
                buttonFrame.TextColor3 = Config.Theme.Text
                buttonFrame.TextSize = 13
                buttonFrame.Font = Enum.Font.Gotham
                buttonFrame.Parent = elementContainer
                
                local buttonCorner = Instance.new("UICorner")
                buttonCorner.CornerRadius = UDim.new(0, 4)
                buttonCorner.Parent = buttonFrame
                
                buttonFrame.MouseButton1Click:Connect(function()
                    button.Callback()
                end)
                
                buttonFrame.MouseEnter:Connect(function()
                    CreateTween(buttonFrame, {BackgroundTransparency = 0.1}, 0.2)
                end)
                
                buttonFrame.MouseLeave:Connect(function()
                    CreateTween(buttonFrame, {BackgroundTransparency = 0}, 0.2)
                end)
                
                return button
            end
            
            return section
        end
        
        tab.Button = tabButton
        tab.Content = tabContent
        table.insert(window.Tabs, tab)
        
        return tab
    end
    
    function window:CreateBottomTab(name, icon)
        local bottomTab = Instance.new("TextButton")
        bottomTab.Name = name
        bottomTab.Size = UDim2.new(1/6, 0, 1, 0)
        bottomTab.BackgroundTransparency = 1
        bottomTab.Text = ""
        bottomTab.Parent = bottomBar
        
        local iconLabel = Instance.new("TextLabel")
        iconLabel.Size = UDim2.new(1, 0, 0.6, 0)
        iconLabel.Position = UDim2.new(0, 0, 0, 5)
        iconLabel.BackgroundTransparency = 1
        iconLabel.Text = icon or "?"
        iconLabel.TextColor3 = Config.Theme.SubText
        iconLabel.TextSize = 20
        iconLabel.Font = Enum.Font.Gotham
        iconLabel.Parent = bottomTab
        
        local nameLabel = Instance.new("TextLabel")
        nameLabel.Size = UDim2.new(1, 0, 0.4, 0)
        nameLabel.Position = UDim2.new(0, 0, 0.6, -5)
        nameLabel.BackgroundTransparency = 1
        nameLabel.Text = name
        nameLabel.TextColor3 = Config.Theme.SubText
        nameLabel.TextSize = 10
        nameLabel.Font = Enum.Font.Gotham
        nameLabel.Parent = bottomTab
        
        bottomTab.MouseButton1Click:Connect(function()
            -- Handle bottom tab click
            for _, child in pairs(bottomBar:GetChildren()) do
                if child:IsA("TextButton") then
                    child:FindFirstChild("TextLabel").TextColor3 = Config.Theme.SubText
                    child:FindFirstChild("TextLabel", true).TextColor3 = Config.Theme.SubText
                end
            end
            iconLabel.TextColor3 = Config.Theme.Accent
            nameLabel.TextColor3 = Config.Theme.Accent
        end)
        
        return bottomTab
    end
    
    function window:CreateColorPicker(options)
        options = options or {}
        local colorPicker = {}
        colorPicker.Color = options.Default or Color3.new(1, 1, 1)
        colorPicker.Callback = options.Callback or function() end
        
        -- Create color picker window
        local pickerFrame = Instance.new("Frame")
        pickerFrame.Name = "ColorPicker"
        pickerFrame.Size = UDim2.new(0, 250, 0, 280)
        pickerFrame.Position = UDim2.new(0, mainFrame.AbsolutePosition.X + mainFrame.AbsoluteSize.X + 10, 0, mainFrame.AbsolutePosition.Y)
        pickerFrame.BackgroundColor3 = Config.Theme.Background
        pickerFrame.BorderSizePixel = 0
        pickerFrame.Parent = screenGui
        
        local pickerCorner = Instance.new("UICorner")
        pickerCorner.CornerRadius = UDim.new(0, 8)
        pickerCorner.Parent = pickerFrame
        
        -- Saturation/Value Box
        local satValBox = Instance.new("ImageButton")
        satValBox.Size = UDim2.new(0, 200, 0, 200)
        satValBox.Position = UDim2.new(0, 10, 0, 10)
        satValBox.BorderSizePixel = 0
        satValBox.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"
        satValBox.Parent = pickerFrame
        
        -- Hue Slider
        local hueSlider = Instance.new("ImageButton")
        hueSlider.Size = UDim2.new(0, 20, 0, 200)
        hueSlider.Position = UDim2.new(0, 220, 0, 10)
        hueSlider.BorderSizePixel = 0
        hueSlider.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"
        hueSlider.Parent = pickerFrame
        
        -- RGB Inputs
        local inputContainer = Instance.new("Frame")
        inputContainer.Size = UDim2.new(1, -20, 0, 25)
        inputContainer.Position = UDim2.new(0, 10, 0, 220)
        inputContainer.BackgroundTransparency = 1
        inputContainer.Parent = pickerFrame
        
        local inputLayout = Instance.new("UIListLayout")
        inputLayout.FillDirection = Enum.FillDirection.Horizontal
        inputLayout.SortOrder = Enum.SortOrder.LayoutOrder
        inputLayout.Padding = UDim.new(0, 5)
        inputLayout.Parent = inputContainer
        
        local function createInput(placeholder, value)
            local input = Instance.new("TextBox")
            input.Size = UDim2.new(0, 35, 1, 0)
            input.BackgroundColor3 = Config.Theme.TertiaryBackground
            input.BorderSizePixel = 0
            input.Text = tostring(value)
            input.PlaceholderText = placeholder
            input.TextColor3 = Config.Theme.Text
            input.TextSize = 12
            input.Font = Enum.Font.Gotham
            input.Parent = inputContainer
            
            local inputCorner = Instance.new("UICorner")
            inputCorner.CornerRadius = UDim.new(0, 4)
            inputCorner.Parent = input
            
            return input
        end
        
        local rInput = createInput("R", math.floor(colorPicker.Color.R * 255))
        local gInput = createInput("G", math.floor(colorPicker.Color.G * 255))
        local bInput = createInput("B", math.floor(colorPicker.Color.B * 255))
        
        -- Hex Input
        local hexInput = Instance.new("TextBox")
        hexInput.Size = UDim2.new(1, -20, 0, 25)
        hexInput.Position = UDim2.new(0, 10, 0, 250)
        hexInput.BackgroundColor3 = Config.Theme.TertiaryBackground
        hexInput.BorderSizePixel = 0
        hexInput.Text = string.format("#%02X%02X%02X", 
            math.floor(colorPicker.Color.R * 255),
            math.floor(colorPicker.Color.G * 255),
            math.floor(colorPicker.Color.B * 255)
        )
        hexInput.TextColor3 = Config.Theme.Text
        hexInput.TextSize = 12
        hexInput.Font = Enum.Font.Gotham
        hexInput.Parent = pickerFrame
        
        local hexCorner = Instance.new("UICorner")
        hexCorner.CornerRadius = UDim.new(0, 4)
        hexCorner.Parent = hexInput
        
        -- Close button
        local closeButton = Instance.new("TextButton")
        closeButton.Size = UDim2.new(0, 20, 0, 20)
        closeButton.Position = UDim2.new(1, -25, 0, 5)
        closeButton.BackgroundTransparency = 1
        closeButton.Text = "X"
        closeButton.TextColor3 = Config.Theme.Text
        closeButton.TextSize = 14
        closeButton.Font = Enum.Font.GothamBold
        closeButton.Parent = pickerFrame
        
        closeButton.MouseButton1Click:Connect(function()
            pickerFrame:Destroy()
        end)
        
        MakeDraggable(pickerFrame)
        
        return colorPicker
    end
    
    function window:SelectTab(tab)
        for _, t in pairs(window.Tabs) do
            t.Content.Visible = false
            t.Button.BackgroundTransparency = 0.7
            t.Button.TextColor3 = Config.Theme.SubText
        end
        
        tab.Content.Visible = true
        tab.Button.BackgroundTransparency = 0.3
        tab.Button.TextColor3 = Config.Theme.Text
        window.ActiveTab = tab
    end
    
    -- Toggle visibility
    function window:Toggle()
        mainFrame.Visible = not mainFrame.Visible
    end
    
    -- Keybind for toggle
    UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if not gameProcessed and input.KeyCode == (options.ToggleKey or Enum.KeyCode.RightShift) then
            window:Toggle()
        end
    end)
    
    return window
end

return Library
