-- Primordial UI Library v3.0.0 - Complete Fix
-- All critical bugs resolved, proper tab system, working color picker

local PrimordialUI = {}
PrimordialUI.__index = PrimordialUI

local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local CoreGui = game:GetService("CoreGui")

local Player = Players.LocalPlayer
local Mouse = Player:GetMouse()

-- Theme Configuration
local Theme = {
    -- Background hierarchy (proper contrast)
    MainBackground = Color3.fromRGB(18, 18, 18),
    PanelBackground = Color3.fromRGB(25, 25, 25),
    SectionBackground = Color3.fromRGB(32, 32, 32),
    ElementBackground = Color3.fromRGB(38, 38, 38),
    
    -- Text colors
    PrimaryText = Color3.fromRGB(255, 255, 255),
    SecondaryText = Color3.fromRGB(190, 190, 190),
    DimText = Color3.fromRGB(140, 140, 140),
    SectionTitle = Color3.fromRGB(160, 160, 160),
    
    -- Accent colors
    Accent = Color3.fromRGB(100, 149, 237),
    AccentDim = Color3.fromRGB(70, 119, 207),
    
    -- Component colors
    CheckboxBorder = Color3.fromRGB(55, 55, 55),
    CheckboxFill = Color3.fromRGB(100, 149, 237),
    SliderTrack = Color3.fromRGB(45, 45, 45),
    SliderFill = Color3.fromRGB(100, 149, 237),
    SliderThumb = Color3.fromRGB(255, 255, 255),
    DropdownBorder = Color3.fromRGB(55, 55, 55),
    
    -- Tab colors
    TabInactive = Color3.fromRGB(35, 35, 35),
    TabActive = Color3.fromRGB(100, 149, 237),
    TabHover = Color3.fromRGB(50, 50, 50),
    
    -- Sizes
    WindowWidth = 850,
    WindowHeight = 650,
    SidebarWidth = 70,
    TopBarHeight = 38,
    BottomBarHeight = 58,
    SectionPadding = 12,
    ElementHeight = 26,
    ElementSpacing = 6,
    CheckboxSize = 16,
    SliderTrackHeight = 5,
    SliderThumbSize = 12
}

-- Utility Functions
local function CreateTween(instance, properties, duration)
    duration = duration or 0.2
    local tween = TweenService:Create(
        instance,
        TweenInfo.new(duration, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
        properties
    )
    tween:Play()
    return tween
end

local function MakeDraggable(frame, handle, shadowFrame)
    handle = handle or frame
    local dragging, dragInput, dragStart, startPos, shadowStartPos
    
    local function update(input)
        local delta = input.Position - dragStart
        local newPos = UDim2.new(
            startPos.X.Scale,
            startPos.X.Offset + delta.X,
            startPos.Y.Scale,
            startPos.Y.Offset + delta.Y
        )
        frame.Position = newPos
        -- Move shadow with frame to fix detachment bug
        if shadowFrame then
            shadowFrame.Position = UDim2.new(
                shadowStartPos.X.Scale,
                shadowStartPos.X.Offset + delta.X,
                shadowStartPos.Y.Scale,
                shadowStartPos.Y.Offset + delta.Y
            )
        end
    end
    
    handle.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position
            if shadowFrame then
                shadowStartPos = shadowFrame.Position
            end
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    
    handle.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            update(input)
        end
    end)
end

-- Main Library
function PrimordialUI:CreateWindow(options)
    options = options or {}
    
    local window = {
        Tabs = {},
        BottomTabs = {},
        ActiveTab = nil,
        ActiveBottomTab = nil,
        ColorPickers = {},
        ScreenGui = nil,
        MainFrame = nil
    }
    
    -- User Customization
    local logoAssetId = options.LogoAssetId or ""
    local toggleKey = options.ToggleKey or Enum.KeyCode.RightShift
    local menuTitle = options.Title or "primordial"
    
    -- Create ScreenGui
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "PrimordialUI"
    screenGui.ResetOnSpawn = false
    screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    screenGui.DisplayOrder = 1
    screenGui.Parent = CoreGui or Player.PlayerGui
    window.ScreenGui = screenGui
    
    -- Shadow Frame (fixed to move with main frame)
    local shadowFrame = Instance.new("Frame")
    shadowFrame.Name = "Shadow"
    shadowFrame.Size = UDim2.new(0, Theme.WindowWidth + 10, 0, Theme.WindowHeight + 10)
    shadowFrame.Position = UDim2.new(0.5, -(Theme.WindowWidth + 10)/2, 0.5, -(Theme.WindowHeight + 10)/2)
    shadowFrame.BackgroundColor3 = Color3.new(0, 0, 0)
    shadowFrame.BackgroundTransparency = 0.4
    shadowFrame.BorderSizePixel = 0
    shadowFrame.ZIndex = 0
    shadowFrame.Parent = screenGui
    
    local shadowCorner = Instance.new("UICorner")
    shadowCorner.CornerRadius = UDim.new(0, 12)
    shadowCorner.Parent = shadowFrame
    
    local shadowBlur = Instance.new("ImageLabel")
    shadowBlur.Size = UDim2.new(1, 20, 1, 20)
    shadowBlur.Position = UDim2.new(0, -10, 0, -10)
    shadowBlur.BackgroundTransparency = 1
    shadowBlur.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"
    shadowBlur.ImageTransparency = 0.8
    shadowBlur.ScaleType = Enum.ScaleType.Slice
    shadowBlur.SliceCenter = Rect.new(10, 10, 10, 10)
    shadowBlur.Parent = shadowFrame
    
    -- Main Frame
    local mainFrame = Instance.new("Frame")
    mainFrame.Name = "MainWindow"
    mainFrame.Size = UDim2.new(0, Theme.WindowWidth, 0, Theme.WindowHeight)
    mainFrame.Position = UDim2.new(0.5, -Theme.WindowWidth/2, 0.5, -Theme.WindowHeight/2)
    mainFrame.BackgroundColor3 = Theme.MainBackground
    mainFrame.BorderSizePixel = 0
    mainFrame.ClipsDescendants = true
    mainFrame.ZIndex = 1
    mainFrame.Parent = screenGui
    window.MainFrame = mainFrame
    
    local mainCorner = Instance.new("UICorner")
    mainCorner.CornerRadius = UDim.new(0, 10)
    mainCorner.Parent = mainFrame
    
    -- Top Bar
    local topBar = Instance.new("Frame")
    topBar.Name = "TopBar"
    topBar.Size = UDim2.new(1, 0, 0, Theme.TopBarHeight)
    topBar.BackgroundColor3 = Theme.PanelBackground
    topBar.BorderSizePixel = 0
    topBar.ZIndex = 2
    topBar.Parent = mainFrame
    
    local topBarCorner = Instance.new("UICorner")
    topBarCorner.CornerRadius = UDim.new(0, 10)
    topBarCorner.Parent = topBar
    
    local topBarFix = Instance.new("Frame")
    topBarFix.Size = UDim2.new(1, 0, 0, 10)
    topBarFix.Position = UDim2.new(0, 0, 1, -10)
    topBarFix.BackgroundColor3 = Theme.PanelBackground
    topBarFix.BorderSizePixel = 0
    topBarFix.ZIndex = 2
    topBarFix.Parent = topBar
    
    -- Title
    local title = Instance.new("TextLabel")
    title.Name = "Title"
    title.Text = menuTitle:lower()
    title.Size = UDim2.new(1, 0, 1, 0)
    title.BackgroundTransparency = 1
    title.TextColor3 = Theme.PrimaryText
    title.TextSize = 15
    title.Font = Enum.Font.Gotham
    title.ZIndex = 3
    title.Parent = topBar
    
    -- Make draggable with shadow fix
    MakeDraggable(mainFrame, topBar, shadowFrame)
    
    -- Left Sidebar
    local sidebar = Instance.new("Frame")
    sidebar.Name = "Sidebar"
    sidebar.Position = UDim2.new(0, 0, 0, Theme.TopBarHeight)
    sidebar.Size = UDim2.new(0, Theme.SidebarWidth, 1, -Theme.TopBarHeight - Theme.BottomBarHeight)
    sidebar.BackgroundColor3 = Theme.PanelBackground
    sidebar.BorderSizePixel = 0
    sidebar.ZIndex = 2
    sidebar.Parent = mainFrame
    
    -- Logo Container with fallback
    local logoContainer = Instance.new("Frame")
    logoContainer.Name = "LogoContainer"
    logoContainer.Size = UDim2.new(0, 48, 0, 48)
    logoContainer.Position = UDim2.new(0.5, -24, 0, 12)
    logoContainer.BackgroundTransparency = 1
    logoContainer.ZIndex = 3
    logoContainer.Parent = sidebar
    
    if logoAssetId ~= "" then
        local success, err = pcall(function()
            local logo = Instance.new("ImageLabel")
            logo.Name = "Logo"
            logo.Size = UDim2.new(1, 0, 1, 0)
            logo.BackgroundTransparency = 1
            logo.Image = logoAssetId
            logo.ScaleType = Enum.ScaleType.Fit
            logo.ZIndex = 3
            logo.Parent = logoContainer
        end)
        
        if not success then
            -- If image fails to load, show nothing (no broken image icon)
            logoContainer.Visible = false
            logoContainer.Size = UDim2.new(0, 0, 0, 0)
        end
    else
        -- Default hourglass shape if no logo provided
        local defaultLogo = Instance.new("TextLabel")
        defaultLogo.Text = "â§—"
        defaultLogo.Size = UDim2.new(1, 0, 1, 0)
        defaultLogo.BackgroundTransparency = 1
        defaultLogo.TextColor3 = Theme.SecondaryText
        defaultLogo.TextSize = 32
        defaultLogo.Font = Enum.Font.Gotham
        defaultLogo.ZIndex = 3
        defaultLogo.Parent = logoContainer
    end
    
    -- Sidebar Tabs Container
    local sidebarTabs = Instance.new("Frame")
    sidebarTabs.Name = "SidebarTabs"
    sidebarTabs.Position = UDim2.new(0, 0, 0, 75)
    sidebarTabs.Size = UDim2.new(1, 0, 1, -75)
    sidebarTabs.BackgroundTransparency = 1
    sidebarTabs.ZIndex = 2
    sidebarTabs.Parent = sidebar
    
    local sidebarLayout = Instance.new("UIListLayout")
    sidebarLayout.SortOrder = Enum.SortOrder.LayoutOrder
    sidebarLayout.Padding = UDim.new(0, 6)
    sidebarLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    sidebarLayout.Parent = sidebarTabs
    
    -- Content Area Container
    local contentContainer = Instance.new("Frame")
    contentContainer.Name = "ContentContainer"
    contentContainer.Position = UDim2.new(0, Theme.SidebarWidth, 0, Theme.TopBarHeight)
    contentContainer.Size = UDim2.new(1, -Theme.SidebarWidth, 1, -Theme.TopBarHeight - Theme.BottomBarHeight)
    contentContainer.BackgroundTransparency = 1
    contentContainer.ClipsDescendants = true
    contentContainer.ZIndex = 1
    contentContainer.Parent = mainFrame
    
    -- Bottom Navigation Bar
    local bottomBar = Instance.new("Frame")
    bottomBar.Name = "BottomBar"
    bottomBar.Position = UDim2.new(0, 0, 1, -Theme.BottomBarHeight)
    bottomBar.Size = UDim2.new(1, 0, 0, Theme.BottomBarHeight)
    bottomBar.BackgroundColor3 = Theme.PanelBackground
    bottomBar.BorderSizePixel = 0
    bottomBar.ZIndex = 2
    bottomBar.Parent = mainFrame
    
    local bottomBarCorner = Instance.new("UICorner")
    bottomBarCorner.CornerRadius = UDim.new(0, 10)
    bottomBarCorner.Parent = bottomBar
    
    local bottomBarFix = Instance.new("Frame")
    bottomBarFix.Size = UDim2.new(1, 0, 0, 10)
    bottomBarFix.Position = UDim2.new(0, 0, 0, 0)
    bottomBarFix.BackgroundColor3 = Theme.PanelBackground
    bottomBarFix.BorderSizePixel = 0
    bottomBarFix.ZIndex = 2
    bottomBarFix.Parent = bottomBar
    
    local bottomTabsContainer = Instance.new("Frame")
    bottomTabsContainer.Size = UDim2.new(1, 0, 1, 0)
    bottomTabsContainer.BackgroundTransparency = 1
    bottomTabsContainer.ZIndex = 3
    bottomTabsContainer.Parent = bottomBar
    
    local bottomLayout = Instance.new("UIListLayout")
    bottomLayout.FillDirection = Enum.FillDirection.Horizontal
    bottomLayout.SortOrder = Enum.SortOrder.LayoutOrder
    bottomLayout.Parent = bottomTabsContainer
    
    -- Create Tab Function
    function window:CreateTab(name, icon)
        local tab = {
            Name = name,
            Sections = {},
            Content = nil,
            Button = nil
        }
        
        -- Create tab button
        local tabButton = Instance.new("TextButton")
        tabButton.Name = name
        tabButton.Size = UDim2.new(0, Theme.SidebarWidth - 16, 0, 42)
        tabButton.BackgroundColor3 = Theme.TabInactive
        tabButton.BackgroundTransparency = 0.5
        tabButton.BorderSizePixel = 0
        tabButton.AutoButtonColor = false
        tabButton.Text = ""
        tabButton.ZIndex = 3
        tabButton.Parent = sidebarTabs
        
        local tabCorner = Instance.new("UICorner")
        tabCorner.CornerRadius = UDim.new(0, 6)
        tabCorner.Parent = tabButton
        
        local tabLabel = Instance.new("TextLabel")
        tabLabel.Size = UDim2.new(1, 0, 1, 0)
        tabLabel.BackgroundTransparency = 1
        tabLabel.Text = name:lower()
        tabLabel.TextColor3 = Theme.SecondaryText
        tabLabel.TextSize = 12
        tabLabel.Font = Enum.Font.Gotham
        tabLabel.ZIndex = 4
        tabLabel.Parent = tabButton
        
        -- Create tab content
        local tabContent = Instance.new("ScrollingFrame")
        tabContent.Name = name .. "Content"
        tabContent.Size = UDim2.new(1, -Theme.SectionPadding * 2, 1, -Theme.SectionPadding * 2)
        tabContent.Position = UDim2.new(0, Theme.SectionPadding, 0, Theme.SectionPadding)
        tabContent.BackgroundTransparency = 1
        tabContent.BorderSizePixel = 0
        tabContent.ScrollBarThickness = 4
        tabContent.ScrollBarImageColor3 = Theme.Accent
        tabContent.ScrollBarImageTransparency = 0.5
        tabContent.Visible = false
        tabContent.ClipsDescendants = true
        tabContent.ZIndex = 2
        tabContent.Parent = contentContainer
        
        local contentGrid = Instance.new("UIGridLayout")
        contentGrid.CellSize = UDim2.new(0.31, 0, 0, 210)
        contentGrid.CellPadding = UDim2.new(0.035, 0, 0, 12)
        contentGrid.SortOrder = Enum.SortOrder.LayoutOrder
        contentGrid.Parent = tabContent
        
        -- Tab click handler
        tabButton.MouseButton1Click:Connect(function()
            window:SelectTab(tab)
        end)
        
        tabButton.MouseEnter:Connect(function()
            if window.ActiveTab ~= tab then
                CreateTween(tabButton, {BackgroundTransparency = 0.3})
            end
        end)
        
        tabButton.MouseLeave:Connect(function()
            if window.ActiveTab ~= tab then
                CreateTween(tabButton, {BackgroundTransparency = 0.5})
            end
        end)
        
        tab.Button = tabButton
        tab.Content = tabContent
        
        -- Section creation
        function tab:CreateSection(sectionName)
            local section = {
                Elements = {}
            }
            
            local sectionFrame = Instance.new("Frame")
            sectionFrame.Name = sectionName
            sectionFrame.BackgroundColor3 = Theme.SectionBackground
            sectionFrame.BackgroundTransparency = 0.1
            sectionFrame.BorderSizePixel = 0
            sectionFrame.ZIndex = 3
            sectionFrame.Parent = tabContent
            
            local sectionCorner = Instance.new("UICorner")
            sectionCorner.CornerRadius = UDim.new(0, 8)
            sectionCorner.Parent = sectionFrame
            
            local sectionTitle = Instance.new("TextLabel")
            sectionTitle.Name = "Title"
            sectionTitle.Text = sectionName:lower()
            sectionTitle.Size = UDim2.new(1, -Theme.SectionPadding * 2, 0, 22)
            sectionTitle.Position = UDim2.new(0, Theme.SectionPadding, 0, 6)
            sectionTitle.BackgroundTransparency = 1
            sectionTitle.TextColor3 = Theme.SectionTitle
            sectionTitle.TextSize = 12
            sectionTitle.Font = Enum.Font.Gotham
            sectionTitle.TextXAlignment = Enum.TextXAlignment.Left
            sectionTitle.ZIndex = 4
            sectionTitle.Parent = sectionFrame
            
            local elementsContainer = Instance.new("Frame")
            elementsContainer.Name = "Elements"
            elementsContainer.Position = UDim2.new(0, Theme.SectionPadding, 0, 32)
            elementsContainer.Size = UDim2.new(1, -Theme.SectionPadding * 2, 1, -36)
            elementsContainer.BackgroundTransparency = 1
            elementsContainer.ZIndex = 4
            elementsContainer.Parent = sectionFrame
            
            local elementLayout = Instance.new("UIListLayout")
            elementLayout.SortOrder = Enum.SortOrder.LayoutOrder
            elementLayout.Padding = UDim.new(0, Theme.ElementSpacing)
            elementLayout.Parent = elementsContainer
            
            -- Checkbox Element
            function section:CreateCheckbox(options)
                options = options or {}
                local checkbox = {
                    Value = options.Default or false,
                    Callback = options.Callback or function() end
                }
                
                local checkboxFrame = Instance.new("Frame")
                checkboxFrame.Name = options.Name or "Checkbox"
                checkboxFrame.Size = UDim2.new(1, 0, 0, Theme.ElementHeight)
                checkboxFrame.BackgroundTransparency = 1
                checkboxFrame.ZIndex = 5
                checkboxFrame.Parent = elementsContainer
                
                local checkButton = Instance.new("TextButton")
                checkButton.Size = UDim2.new(0, Theme.CheckboxSize, 0, Theme.CheckboxSize)
                checkButton.Position = UDim2.new(0, 0, 0.5, -Theme.CheckboxSize/2)
                checkButton.BackgroundColor3 = Theme.CheckboxBorder
                checkButton.BackgroundTransparency = 0.3
                checkButton.BorderSizePixel = 0
                checkButton.Text = ""
                checkButton.AutoButtonColor = false
                checkButton.ZIndex = 6
                checkButton.Parent = checkboxFrame
                
                local checkCorner = Instance.new("UICorner")
                checkCorner.CornerRadius = UDim.new(0, 3)
                checkCorner.Parent = checkButton
                
                local checkMark = Instance.new("Frame")
                checkMark.Name = "CheckMark"
                checkMark.Size = UDim2.new(1, -4, 1, -4)
                checkMark.Position = UDim2.new(0, 2, 0, 2)
                checkMark.BackgroundColor3 = Theme.CheckboxFill
                checkMark.BorderSizePixel = 0
                checkMark.BackgroundTransparency = checkbox.Value and 0 or 1
                checkMark.ZIndex = 7
                checkMark.Parent = checkButton
                
                local markCorner = Instance.new("UICorner")
                markCorner.CornerRadius = UDim.new(0, 2)
                markCorner.Parent = checkMark
                
                local label = Instance.new("TextLabel")
                label.Text = options.Name or "Checkbox"
                label.Position = UDim2.new(0, Theme.CheckboxSize + 6, 0, 0)
                label.Size = UDim2.new(1, -(Theme.CheckboxSize + 6), 1, 0)
                label.BackgroundTransparency = 1
                label.TextColor3 = Theme.PrimaryText
                label.TextSize = 12
                label.Font = Enum.Font.Gotham
                label.TextXAlignment = Enum.TextXAlignment.Left
                label.ZIndex = 6
                label.Parent = checkboxFrame
                
                -- Color Pickers (properly aligned)
                local colorPickerX = -8
                if options.ColorPicker then
                    local colorButton = Instance.new("TextButton")
                    colorButton.Size = UDim2.new(0, 28, 0, 16)
                    colorButton.Position = UDim2.new(1, colorPickerX - 28, 0.5, -8)
                    colorButton.BackgroundColor3 = options.ColorPicker.Default or Color3.new(1, 1, 1)
                    colorButton.BorderSizePixel = 0
                    colorButton.Text = ""
                    colorButton.AutoButtonColor = false
                    colorButton.ZIndex = 6
                    colorButton.Parent = checkboxFrame
                    
                    local colorCorner = Instance.new("UICorner")
                    colorCorner.CornerRadius = UDim.new(0, 3)
                    colorCorner.Parent = colorButton
                    
                    local colorBorder = Instance.new("UIStroke")
                    colorBorder.Color = Theme.CheckboxBorder
                    colorBorder.Thickness = 1
                    colorBorder.Transparency = 0.5
                    colorBorder.Parent = colorButton
                    
                    colorButton.MouseButton1Click:Connect(function()
                        window:CreateColorPicker({
                            Default = colorButton.BackgroundColor3,
                            Callback = function(color)
                                colorButton.BackgroundColor3 = color
                                if options.ColorPicker.Callback then
                                    options.ColorPicker.Callback(color)
                                end
                            end
                        })
                    end)
                    
                    colorPickerX = colorPickerX - 36
                end
                
                if options.ColorPicker2 then
                    local colorButton2 = Instance.new("TextButton")
                    colorButton2.Size = UDim2.new(0, 28, 0, 16)
                    colorButton2.Position = UDim2.new(1, colorPickerX - 28, 0.5, -8)
                    colorButton2.BackgroundColor3 = options.ColorPicker2.Default or Color3.new(1, 1, 1)
                    colorButton2.BorderSizePixel = 0
                    colorButton2.Text = ""
                    colorButton2.AutoButtonColor = false
                    colorButton2.ZIndex = 6
                    colorButton2.Parent = checkboxFrame
                    
                    local colorCorner2 = Instance.new("UICorner")
                    colorCorner2.CornerRadius = UDim.new(0, 3)
                    colorCorner2.Parent = colorButton2
                    
                    local colorBorder2 = Instance.new("UIStroke")
                    colorBorder2.Color = Theme.CheckboxBorder
                    colorBorder2.Thickness = 1
                    colorBorder2.Transparency = 0.5
                    colorBorder2.Parent = colorButton2
                    
                    colorButton2.MouseButton1Click:Connect(function()
                        window:CreateColorPicker({
                            Default = colorButton2.BackgroundColor3,
                            Callback = function(color)
                                colorButton2.BackgroundColor3 = color
                                if options.ColorPicker2.Callback then
                                    options.ColorPicker2.Callback(color)
                                end
                            end
                        })
                    end)
                end
                
                function checkbox:Set(value)
                    checkbox.Value = value
                    CreateTween(checkMark, {BackgroundTransparency = value and 0 or 1}, 0.15)
                    checkbox.Callback(value)
                end
                
                checkButton.MouseButton1Click:Connect(function()
                    checkbox:Set(not checkbox.Value)
                end)
                
                return checkbox
            end
            
            -- Slider Element
            function section:CreateSlider(options)
                options = options or {}
                local slider = {
                    Value = options.Default or options.Min or 0,
                    Callback = options.Callback or function() end
                }
                
                local sliderFrame = Instance.new("Frame")
                sliderFrame.Name = options.Name or "Slider"
                sliderFrame.Size = UDim2.new(1, 0, 0, Theme.ElementHeight + 20)
                sliderFrame.BackgroundTransparency = 1
                sliderFrame.ZIndex = 5
                sliderFrame.Parent = elementsContainer
                
                local label = Instance.new("TextLabel")
                label.Text = options.Name or "Slider"
                label.Size = UDim2.new(0.65, 0, 0, 18)
                label.BackgroundTransparency = 1
                label.TextColor3 = Theme.PrimaryText
                label.TextSize = 12
                label.Font = Enum.Font.Gotham
                label.TextXAlignment = Enum.TextXAlignment.Left
                label.ZIndex = 6
                label.Parent = sliderFrame
                
                local valueLabel = Instance.new("TextLabel")
                valueLabel.Text = tostring(slider.Value) .. (options.Suffix or "")
                valueLabel.Size = UDim2.new(0.35, 0, 0, 18)
                valueLabel.Position = UDim2.new(0.65, 0, 0, 0)
                valueLabel.BackgroundTransparency = 1
                valueLabel.TextColor3 = Theme.SecondaryText
                valueLabel.TextSize = 12
                valueLabel.Font = Enum.Font.Gotham
                valueLabel.TextXAlignment = Enum.TextXAlignment.Right
                valueLabel.ZIndex = 6
                valueLabel.Parent = sliderFrame
                
                local sliderTrack = Instance.new("Frame")
                sliderTrack.Size = UDim2.new(1, 0, 0, Theme.SliderTrackHeight)
                sliderTrack.Position = UDim2.new(0, 0, 0, 24)
                sliderTrack.BackgroundColor3 = Theme.SliderTrack
                sliderTrack.BorderSizePixel = 0
                sliderTrack.ZIndex = 6
                sliderTrack.Parent = sliderFrame
                
                local trackCorner = Instance.new("UICorner")
                trackCorner.CornerRadius = UDim.new(0, Theme.SliderTrackHeight/2)
                trackCorner.Parent = sliderTrack
                
                local sliderFill = Instance.new("Frame")
                sliderFill.Size = UDim2.new(0.5, 0, 1, 0)
                sliderFill.BackgroundColor3 = Theme.SliderFill
                sliderFill.BorderSizePixel = 0
                sliderFill.ZIndex = 7
                sliderFill.Parent = sliderTrack
                
                local fillCorner = Instance.new("UICorner")
                fillCorner.CornerRadius = UDim.new(0, Theme.SliderTrackHeight/2)
                fillCorner.Parent = sliderFill
                
                local sliderThumb = Instance.new("TextButton")
                sliderThumb.Size = UDim2.new(0, Theme.SliderThumbSize, 0, Theme.SliderThumbSize)
                sliderThumb.Position = UDim2.new(0.5, -Theme.SliderThumbSize/2, 0.5, -Theme.SliderThumbSize/2)
                sliderThumb.BackgroundColor3 = Theme.SliderThumb
                sliderThumb.BorderSizePixel = 0
                sliderThumb.Text = ""
                sliderThumb.AutoButtonColor = false
                sliderThumb.ZIndex = 8
                sliderThumb.Parent = sliderTrack
                
                local thumbCorner = Instance.new("UICorner")
                thumbCorner.CornerRadius = UDim.new(1, 0)
                thumbCorner.Parent = sliderThumb
                
                local thumbShadow = Instance.new("UIStroke")
                thumbShadow.Color = Color3.new(0, 0, 0)
                thumbShadow.Thickness = 1
                thumbShadow.Transparency = 0.5
                thumbShadow.Parent = sliderThumb
                
                local function updateSlider(input)
                    local min = options.Min or 0
                    local max = options.Max or 100
                    local mousePos = UserInputService:GetMouseLocation()
                    local relativePos = mousePos.X - sliderTrack.AbsolutePosition.X
                    local percentage = math.clamp(relativePos / sliderTrack.AbsoluteSize.X, 0, 1)
                    
                    slider.Value = math.floor(min + (max - min) * percentage)
                    sliderFill.Size = UDim2.new(percentage, 0, 1, 0)
                    sliderThumb.Position = UDim2.new(percentage, -Theme.SliderThumbSize/2, 0.5, -Theme.SliderThumbSize/2)
                    valueLabel.Text = tostring(slider.Value) .. (options.Suffix or "")
                    slider.Callback(slider.Value)
                end
                
                local dragging = false
                
                sliderThumb.MouseButton1Down:Connect(function()
                    dragging = true
                end)
                
                sliderTrack.InputBegan:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        dragging = true
                        updateSlider(input)
                    end
                end)
                
                UserInputService.InputEnded:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        dragging = false
                    end
                end)
                
                UserInputService.InputChanged:Connect(function(input)
                    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                        updateSlider(input)
                    end
                end)
                
                function slider:Set(value)
                    local min = options.Min or 0
                    local max = options.Max or 100
                    slider.Value = math.clamp(value, min, max)
                    local percentage = (slider.Value - min) / (max - min)
                    sliderFill.Size = UDim2.new(percentage, 0, 1, 0)
                    sliderThumb.Position = UDim2.new(percentage, -Theme.SliderThumbSize/2, 0.5, -Theme.SliderThumbSize/2)
                    valueLabel.Text = tostring(slider.Value) .. (options.Suffix or "")
                    slider.Callback(slider.Value)
                end
                
                slider:Set(slider.Value)
                
                return slider
            end
            
            -- Fixed Dropdown (closed by default)
            function section:CreateDropdown(options)
                options = options or {}
                local dropdown = {
                    Value = options.Default or (options.Options[1] or ""),
                    Callback = options.Callback or function() end,
                    Open = false -- Always start closed
                }
                
                local dropdownFrame = Instance.new("Frame")
                dropdownFrame.Name = options.Name or "Dropdown"
                dropdownFrame.Size = UDim2.new(1, 0, 0, Theme.ElementHeight)
                dropdownFrame.BackgroundTransparency = 1
                dropdownFrame.ZIndex = 5
                dropdownFrame.Parent = elementsContainer
                
                local label = Instance.new("TextLabel")
                label.Text = options.Name or "Dropdown"
                label.Size = UDim2.new(0.38, 0, 1, 0)
                label.BackgroundTransparency = 1
                label.TextColor3 = Theme.PrimaryText
                label.TextSize = 12
                label.Font = Enum.Font.Gotham
                label.TextXAlignment = Enum.TextXAlignment.Left
                label.ZIndex = 6
                label.Parent = dropdownFrame
                
                local dropButton = Instance.new("TextButton")
                dropButton.Size = UDim2.new(0.62, -4, 1, 0)
                dropButton.Position = UDim2.new(0.38, 4, 0, 0)
                dropButton.BackgroundColor3 = Theme.ElementBackground
                dropButton.BorderSizePixel = 0
                dropButton.Text = dropdown.Value
                dropButton.TextColor3 = Theme.SecondaryText
                dropButton.TextSize = 12
                dropButton.Font = Enum.Font.Gotham
                dropButton.AutoButtonColor = false
                dropButton.ClipsDescendants = true
                dropButton.ZIndex = 6
                dropButton.Parent = dropdownFrame
                
                local dropCorner = Instance.new("UICorner")
                dropCorner.CornerRadius = UDim.new(0, 4)
                dropCorner.Parent = dropButton
                
                local dropBorder = Instance.new("UIStroke")
                dropBorder.Color = Theme.DropdownBorder
                dropBorder.Thickness = 1
                dropBorder.Transparency = 0.5
                dropBorder.Parent = dropButton
                
                local chevron = Instance.new("TextLabel")
                chevron.Text = "â–¼"
                chevron.Size = UDim2.new(0, 20, 1, 0)
                chevron.Position = UDim2.new(1, -20, 0, 0)
                chevron.BackgroundTransparency = 1
                chevron.TextColor3 = Theme.DimText
                chevron.TextSize = 10
                chevron.Font = Enum.Font.Gotham
                chevron.ZIndex = 7
                chevron.Parent = dropButton
                
                -- Dropdown list (starts hidden)
                local dropList = Instance.new("Frame")
                dropList.Size = UDim2.new(0.62, -4, 0, math.min(#options.Options * 26, 130))
                dropList.Position = UDim2.new(0.38, 4, 1, 4)
                dropList.BackgroundColor3 = Theme.ElementBackground
                dropList.BorderSizePixel = 0
                dropList.Visible = false -- Fixed: starts closed
                dropList.ZIndex = 100
                dropList.Parent = dropdownFrame
                
                local listCorner = Instance.new("UICorner")
                listCorner.CornerRadius = UDim.new(0, 4)
                listCorner.Parent = dropList
                
                local listBorder = Instance.new("UIStroke")
                listBorder.Color = Theme.DropdownBorder
                listBorder.Thickness = 1
                listBorder.Parent = dropList
                
                local listScroll = Instance.new("ScrollingFrame")
                listScroll.Size = UDim2.new(1, -4, 1, -4)
                listScroll.Position = UDim2.new(0, 2, 0, 2)
                listScroll.BackgroundTransparency = 1
                listScroll.BorderSizePixel = 0
                listScroll.ScrollBarThickness = 3
                listScroll.ScrollBarImageColor3 = Theme.Accent
                listScroll.ClipsDescendants = true
                listScroll.ZIndex = 101
                listScroll.Parent = dropList
                
                local listLayout = Instance.new("UIListLayout")
                listLayout.SortOrder = Enum.SortOrder.LayoutOrder
                listLayout.Parent = listScroll
                
                for _, option in ipairs(options.Options or {}) do
                    local optionButton = Instance.new("TextButton")
                    optionButton.Size = UDim2.new(1, 0, 0, 26)
                    optionButton.BackgroundTransparency = 1
                    optionButton.Text = option
                    optionButton.TextColor3 = Theme.SecondaryText
                    optionButton.TextSize = 12
                    optionButton.Font = Enum.Font.Gotham
                    optionButton.AutoButtonColor = false
                    optionButton.ZIndex = 102
                    optionButton.Parent = listScroll
                    
                    optionButton.MouseEnter:Connect(function()
                        CreateTween(optionButton, {BackgroundTransparency = 0.9}, 0.1)
                        optionButton.BackgroundColor3 = Theme.TabHover
                        optionButton.TextColor3 = Theme.PrimaryText
                    end)
                    
                    optionButton.MouseLeave:Connect(function()
                        CreateTween(optionButton, {BackgroundTransparency = 1}, 0.1)
                        optionButton.TextColor3 = Theme.SecondaryText
                    end)
                    
                    optionButton.MouseButton1Click:Connect(function()
                        dropdown.Value = option
                        dropButton.Text = option
                        dropList.Visible = false
                        dropdown.Open = false
                        chevron.Text = "â–¼"
                        dropdown.Callback(option)
                    end)
                end
                
                dropButton.MouseButton1Click:Connect(function()
                    dropdown.Open = not dropdown.Open
                    dropList.Visible = dropdown.Open
                    chevron.Text = dropdown.Open and "â–²" or "â–¼"
                end)
                
                return dropdown
            end
            
            -- Button Element
            function section:CreateButton(options)
                options = options or {}
                local button = {
                    Callback = options.Callback or function() end
                }
                
                local buttonFrame = Instance.new("TextButton")
                buttonFrame.Name = options.Name or "Button"
                buttonFrame.Size = UDim2.new(1, 0, 0, Theme.ElementHeight + 2)
                buttonFrame.BackgroundColor3 = Theme.Accent
                buttonFrame.BackgroundTransparency = 0.1
                buttonFrame.BorderSizePixel = 0
                buttonFrame.Text = options.Name or "Button"
                buttonFrame.TextColor3 = Theme.PrimaryText
                buttonFrame.TextSize = 12
                buttonFrame.Font = Enum.Font.Gotham
                buttonFrame.AutoButtonColor = false
                buttonFrame.ZIndex = 5
                buttonFrame.Parent = elementsContainer
                
                local buttonCorner = Instance.new("UICorner")
                buttonCorner.CornerRadius = UDim.new(0, 4)
                buttonCorner.Parent = buttonFrame
                
                buttonFrame.MouseButton1Click:Connect(function()
                    CreateTween(buttonFrame, {BackgroundTransparency = 0.3}, 0.1)
                    wait(0.1)
                    CreateTween(buttonFrame, {BackgroundTransparency = 0.1}, 0.1)
                    button.Callback()
                end)
                
                buttonFrame.MouseEnter:Connect(function()
                    CreateTween(buttonFrame, {BackgroundTransparency = 0}, 0.15)
                end)
                
                buttonFrame.MouseLeave:Connect(function()
                    CreateTween(buttonFrame, {BackgroundTransparency = 0.1}, 0.15)
                end)
                
                return button
            end
            
            -- Keybind Element
            function section:CreateKeybind(options)
                options = options or {}
                local keybind = {
                    Key = options.Default or Enum.KeyCode.F,
                    Callback = options.Callback or function() end,
                    Listening = false
                }
                
                local keybindFrame = Instance.new("Frame")
                keybindFrame.Name = options.Name or "Keybind"
                keybindFrame.Size = UDim2.new(1, 0, 0, Theme.ElementHeight)
                keybindFrame.BackgroundTransparency = 1
                keybindFrame.ZIndex = 5
                keybindFrame.Parent = elementsContainer
                
                local label = Instance.new("TextLabel")
                label.Text = options.Name or "Keybind"
                label.Size = UDim2.new(0.65, 0, 1, 0)
                label.BackgroundTransparency = 1
                label.TextColor3 = Theme.PrimaryText
                label.TextSize = 12
                label.Font = Enum.Font.Gotham
                label.TextXAlignment = Enum.TextXAlignment.Left
                label.ZIndex = 6
                label.Parent = keybindFrame
                
                local keyButton = Instance.new("TextButton")
                keyButton.Size = UDim2.new(0, 55, 0, 20)
                keyButton.Position = UDim2.new(1, -55, 0.5, -10)
                keyButton.BackgroundColor3 = Theme.ElementBackground
                keyButton.BorderSizePixel = 0
                keyButton.Text = keybind.Key.Name
                keyButton.TextColor3 = Theme.SecondaryText
                keyButton.TextSize = 11
                keyButton.Font = Enum.Font.Gotham
                keyButton.AutoButtonColor = false
                keyButton.ZIndex = 6
                keyButton.Parent = keybindFrame
                
                local keyCorner = Instance.new("UICorner")
                keyCorner.CornerRadius = UDim.new(0, 3)
                keyCorner.Parent = keyButton
                
                local keyBorder = Instance.new("UIStroke")
                keyBorder.Color = Theme.CheckboxBorder
                keyBorder.Thickness = 1
                keyBorder.Transparency = 0.5
                keyBorder.Parent = keyButton
                
                keyButton.MouseButton1Click:Connect(function()
                    keybind.Listening = true
                    keyButton.Text = "..."
                    keyButton.TextColor3 = Theme.Accent
                end)
                
                UserInputService.InputBegan:Connect(function(input, gameProcessed)
                    if keybind.Listening and input.UserInputType == Enum.UserInputType.Keyboard then
                        keybind.Key = input.KeyCode
                        keyButton.Text = keybind.Key.Name
                        keyButton.TextColor3 = Theme.SecondaryText
                        keybind.Listening = false
                    elseif not gameProcessed and input.KeyCode == keybind.Key then
                        keybind.Callback()
                    end
                end)
                
                return keybind
            end
            
            return section
        end
        
        table.insert(window.Tabs, tab)
        return tab
    end
    
    -- Create Bottom Tab Function (with unique content)
    function window:CreateBottomTab(name, icon)
        local bottomTab = {
            Name = name,
            Icon = icon,
            Sections = {},
            Content = nil,
            Button = nil
        }
        
        -- Create bottom tab button
        local tabButton = Instance.new("TextButton")
        tabButton.Name = name
        tabButton.Size = UDim2.new(1/6, 0, 1, 0)
        tabButton.BackgroundTransparency = 1
        tabButton.Text = ""
        tabButton.AutoButtonColor = false
        tabButton.ZIndex = 3
        tabButton.Parent = bottomTabsContainer
        
        local iconLabel = Instance.new("TextLabel")
        iconLabel.Size = UDim2.new(1, 0, 0, 26)
        iconLabel.Position = UDim2.new(0, 0, 0, 6)
        iconLabel.BackgroundTransparency = 1
        iconLabel.Text = icon or "?"
        iconLabel.TextColor3 = Theme.DimText
        iconLabel.TextSize = 20
        iconLabel.Font = Enum.Font.Gotham
        iconLabel.ZIndex = 4
        iconLabel.Parent = tabButton
        
        local nameLabel = Instance.new("TextLabel")
        nameLabel.Size = UDim2.new(1, 0, 0, 14)
        nameLabel.Position = UDim2.new(0, 0, 1, -18)
        nameLabel.BackgroundTransparency = 1
        nameLabel.Text = name:lower()
        nameLabel.TextColor3 = Theme.DimText
        nameLabel.TextSize = 10
        nameLabel.Font = Enum.Font.Gotham
        nameLabel.ZIndex = 4
        nameLabel.Parent = tabButton
        
        -- Create unique content for this bottom tab
        local tabContent = Instance.new("ScrollingFrame")
        tabContent.Name = name .. "BottomContent"
        tabContent.Size = UDim2.new(1, -Theme.SectionPadding * 2, 1, -Theme.SectionPadding * 2)
        tabContent.Position = UDim2.new(0, Theme.SectionPadding, 0, Theme.SectionPadding)
        tabContent.BackgroundTransparency = 1
        tabContent.BorderSizePixel = 0
        tabContent.ScrollBarThickness = 4
        tabContent.ScrollBarImageColor3 = Theme.Accent
        tabContent.ScrollBarImageTransparency = 0.5
        tabContent.Visible = false
        tabContent.ClipsDescendants = true
        tabContent.ZIndex = 2
        tabContent.Parent = contentContainer
        
        local contentGrid = Instance.new("UIGridLayout")
        contentGrid.CellSize = UDim2.new(0.31, 0, 0, 210)
        contentGrid.CellPadding = UDim2.new(0.035, 0, 0, 12)
        contentGrid.SortOrder = Enum.SortOrder.LayoutOrder
        contentGrid.Parent = tabContent
        
        bottomTab.Content = tabContent
        bottomTab.Button = tabButton
        bottomTab.IconLabel = iconLabel
        bottomTab.NameLabel = nameLabel
        
        -- Click handler
        tabButton.MouseButton1Click:Connect(function()
            window:SelectBottomTab(bottomTab)
        end)
        
        tabButton.MouseEnter:Connect(function()
            if window.ActiveBottomTab ~= bottomTab then
                CreateTween(iconLabel, {TextColor3 = Theme.SecondaryText}, 0.15)
                CreateTween(nameLabel, {TextColor3 = Theme.SecondaryText}, 0.15)
            end
        end)
        
        tabButton.MouseLeave:Connect(function()
            if window.ActiveBottomTab ~= bottomTab then
                CreateTween(iconLabel, {TextColor3 = Theme.DimText}, 0.15)
                CreateTween(nameLabel, {TextColor3 = Theme.DimText}, 0.15)
            end
        end)
        
        -- Section creation for bottom tabs (same as regular tabs)
        bottomTab.CreateSection = window.Tabs[1] and window.Tabs[1].CreateSection or function() end
        
        table.insert(window.BottomTabs, bottomTab)
        return bottomTab
    end
    
    -- Fixed Color Picker
    function window:CreateColorPicker(options)
        options = options or {}
        
        -- Close existing color pickers
        for _, picker in pairs(window.ColorPickers) do
            if picker then
                picker:Destroy()
            end
        end
        window.ColorPickers = {}
        
        local colorPicker = {
            Color = options.Default or Color3.new(1, 1, 1),
            Callback = options.Callback or function() end
        }
        
        -- Create color picker window
        local pickerFrame = Instance.new("Frame")
        pickerFrame.Name = "ColorPicker"
        pickerFrame.Size = UDim2.new(0, 260, 0, 300)
        pickerFrame.Position = UDim2.new(
            0, 
            mainFrame.AbsolutePosition.X + mainFrame.AbsoluteSize.X + 12,
            0,
            mainFrame.AbsolutePosition.Y
        )
        pickerFrame.BackgroundColor3 = Theme.MainBackground
        pickerFrame.BorderSizePixel = 0
        pickerFrame.ZIndex = 200
        pickerFrame.Parent = screenGui
        
        table.insert(window.ColorPickers, pickerFrame)
        
        local pickerCorner = Instance.new("UICorner")
        pickerCorner.CornerRadius = UDim.new(0, 8)
        pickerCorner.Parent = pickerFrame
        
        local pickerBorder = Instance.new("UIStroke")
        pickerBorder.Color = Theme.CheckboxBorder
        pickerBorder.Thickness = 1
        pickerBorder.Parent = pickerFrame
        
        -- Title Bar
        local titleBar = Instance.new("Frame")
        titleBar.Size = UDim2.new(1, 0, 0, 28)
        titleBar.BackgroundColor3 = Theme.PanelBackground
        titleBar.BorderSizePixel = 0
        titleBar.ZIndex = 201
        titleBar.Parent = pickerFrame
        
        local titleCorner = Instance.new("UICorner")
        titleCorner.CornerRadius = UDim.new(0, 8)
        titleCorner.Parent = titleBar
        
        local titleFix = Instance.new("Frame")
        titleFix.Size = UDim2.new(1, 0, 0, 8)
        titleFix.Position = UDim2.new(0, 0, 1, -8)
        titleFix.BackgroundColor3 = Theme.PanelBackground
        titleFix.BorderSizePixel = 0
        titleFix.ZIndex = 201
        titleFix.Parent = titleBar
        
        local titleText = Instance.new("TextLabel")
        titleText.Text = "Color Picker"
        titleText.Size = UDim2.new(1, -28, 1, 0)
        titleText.BackgroundTransparency = 1
        titleText.TextColor3 = Theme.PrimaryText
        titleText.TextSize = 12
        titleText.Font = Enum.Font.Gotham
        titleText.ZIndex = 202
        titleText.Parent = titleBar
        
        -- Proper Close Button
        local closeButton = Instance.new("TextButton")
        closeButton.Size = UDim2.new(0, 20, 0, 20)
        closeButton.Position = UDim2.new(1, -24, 0.5, -10)
        closeButton.BackgroundColor3 = Theme.ElementBackground
        closeButton.BackgroundTransparency = 0.5
        closeButton.BorderSizePixel = 0
        closeButton.Text = "âœ•"
        closeButton.TextColor3 = Theme.SecondaryText
        closeButton.TextSize = 14
        closeButton.Font = Enum.Font.Gotham
        closeButton.AutoButtonColor = false
        closeButton.ZIndex = 202
        closeButton.Parent = titleBar
        
        local closeCorner = Instance.new("UICorner")
        closeCorner.CornerRadius = UDim.new(0, 3)
        closeCorner.Parent = closeButton
        
        closeButton.MouseButton1Click:Connect(function()
            pickerFrame:Destroy()
        end)
        
        closeButton.MouseEnter:Connect(function()
            closeButton.TextColor3 = Theme.PrimaryText
            closeButton.BackgroundTransparency = 0.3
        end)
        
        closeButton.MouseLeave:Connect(function()
            closeButton.TextColor3 = Theme.SecondaryText
            closeButton.BackgroundTransparency = 0.5
        end)
        
        MakeDraggable(pickerFrame, titleBar)
        
        -- Fixed Saturation/Value Field
        local satValFrame = Instance.new("ImageButton")
        satValFrame.Size = UDim2.new(0, 180, 0, 180)
        satValFrame.Position = UDim2.new(0, 12, 0, 38)
        satValFrame.BackgroundColor3 = Color3.fromHSV(0, 1, 1)
        satValFrame.BorderSizePixel = 0
        satValFrame.AutoButtonColor = false
        satValFrame.ZIndex = 201
        satValFrame.Parent = pickerFrame
        
        local satValCorner = Instance.new("UICorner")
        satValCorner.CornerRadius = UDim.new(0, 4)
        satValCorner.Parent = satValFrame
        
        -- Create proper gradients for saturation/value
        local satGradient = Instance.new("UIGradient")
        satGradient.Color = ColorSequence.new({
            ColorSequenceKeypoint.new(0, Color3.new(1, 1, 1)),
            ColorSequenceKeypoint.new(1, Color3.fromHSV(0, 1, 1))
        })
        satGradient.Rotation = 0
        satGradient.Parent = satValFrame
        
        local valGradient = Instance.new("Frame")
        valGradient.Size = UDim2.new(1, 0, 1, 0)
        valGradient.BackgroundColor3 = Color3.new(0, 0, 0)
        valGradient.BorderSizePixel = 0
        valGradient.ZIndex = 202
        valGradient.Parent = satValFrame
        
        local valGradientUI = Instance.new("UIGradient")
        valGradientUI.Color = ColorSequence.new(Color3.new(0, 0, 0))
        valGradientUI.Transparency = NumberSequence.new({
            NumberSequenceKeypoint.new(0, 1),
            NumberSequenceKeypoint.new(1, 0)
        })
        valGradientUI.Rotation = -90
        valGradientUI.Parent = valGradient
        
        local valCorner = Instance.new("UICorner")
        valCorner.CornerRadius = UDim.new(0, 4)
        valCorner.Parent = valGradient
        
        local satValCursor = Instance.new("Frame")
        satValCursor.Size = UDim2.new(0, 8, 0, 8)
        satValCursor.Position = UDim2.new(0.5, -4, 0.5, -4)
        satValCursor.BackgroundColor3 = Color3.new(1, 1, 1)
        satValCursor.BorderSizePixel = 0
        satValCursor.ZIndex = 203
        satValCursor.Parent = satValFrame
        
        local cursorCorner = Instance.new("UICorner")
        cursorCorner.CornerRadius = UDim.new(1, 0)
        cursorCorner.Parent = satValCursor
        
        local cursorBorder = Instance.new("UIStroke")
        cursorBorder.Color = Color3.new(0, 0, 0)
        cursorBorder.Thickness = 2
        cursorBorder.Parent = satValCursor
        
        -- Fixed Hue Slider
        local hueFrame = Instance.new("ImageButton")
        hueFrame.Size = UDim2.new(0, 24, 0, 180)
        hueFrame.Position = UDim2.new(0, 204, 0, 38)
        hueFrame.BackgroundColor3 = Color3.new(1, 1, 1)
        hueFrame.BorderSizePixel = 0
        hueFrame.AutoButtonColor = false
        hueFrame.ZIndex = 201
        hueFrame.Parent = pickerFrame
        
        local hueCorner = Instance.new("UICorner")
        hueCorner.CornerRadius = UDim.new(0, 4)
        hueCorner.Parent = hueFrame
        
        local hueGradient = Instance.new("UIGradient")
        hueGradient.Color = ColorSequence.new({
            ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 0, 0)),
            ColorSequenceKeypoint.new(0.167, Color3.fromRGB(255, 255, 0)),
            ColorSequenceKeypoint.new(0.333, Color3.fromRGB(0, 255, 0)),
            ColorSequenceKeypoint.new(0.5, Color3.fromRGB(0, 255, 255)),
            ColorSequenceKeypoint.new(0.667, Color3.fromRGB(0, 0, 255)),
            ColorSequenceKeypoint.new(0.833, Color3.fromRGB(255, 0, 255)),
            ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 0, 0))
        })
        hueGradient.Rotation = 90
        hueGradient.Parent = hueFrame
        
        -- Fixed aligned hue cursor
        local hueCursor = Instance.new("Frame")
        hueCursor.Size = UDim2.new(1, 4, 0, 4)
        hueCursor.Position = UDim2.new(0, -2, 0, -2)
        hueCursor.BackgroundColor3 = Color3.new(1, 1, 1)
        hueCursor.BorderSizePixel = 0
        hueCursor.ZIndex = 202
        hueCursor.Parent = hueFrame
        
        local hueCursorCorner = Instance.new("UICorner")
        hueCursorCorner.CornerRadius = UDim.new(0, 2)
        hueCursorCorner.Parent = hueCursor
        
        local hueCursorBorder = Instance.new("UIStroke")
        hueCursorBorder.Color = Color3.new(0, 0, 0)
        hueCursorBorder.Thickness = 1
        hueCursorBorder.Parent = hueCursor
        
        -- RGB Inputs
        local inputContainer = Instance.new("Frame")
        inputContainer.Size = UDim2.new(1, -24, 0, 26)
        inputContainer.Position = UDim2.new(0, 12, 0, 228)
        inputContainer.BackgroundTransparency = 1
        inputContainer.ZIndex = 201
        inputContainer.Parent = pickerFrame
        
        local inputLayout = Instance.new("UIListLayout")
        inputLayout.FillDirection = Enum.FillDirection.Horizontal
        inputLayout.SortOrder = Enum.SortOrder.LayoutOrder
        inputLayout.Padding = UDim.new(0, 6)
        inputLayout.Parent = inputContainer
        
        local function createColorInput(label, value)
            local inputFrame = Instance.new("Frame")
            inputFrame.Size = UDim2.new(0, 36, 1, 0)
            inputFrame.BackgroundTransparency = 1
            inputFrame.Parent = inputContainer
            
            local inputBox = Instance.new("TextBox")
            inputBox.Size = UDim2.new(1, 0, 1, 0)
            inputBox.BackgroundColor3 = Theme.ElementBackground
            inputBox.BorderSizePixel = 0
            inputBox.Text = tostring(value)
            inputBox.TextColor3 = Theme.PrimaryText
            inputBox.TextSize = 11
            inputBox.Font = Enum.Font.Gotham
            inputBox.PlaceholderText = label
            inputBox.PlaceholderColor3 = Theme.DimText
            inputBox.ZIndex = 202
            inputBox.Parent = inputFrame
            
            local inputCorner = Instance.new("UICorner")
            inputCorner.CornerRadius = UDim.new(0, 3)
            inputCorner.Parent = inputBox
            
            return inputBox
        end
        
        local rInput = createColorInput("R", math.floor(colorPicker.Color.R * 255))
        local gInput = createColorInput("G", math.floor(colorPicker.Color.G * 255))
        local bInput = createColorInput("B", math.floor(colorPicker.Color.B * 255))
        
        -- Hex Input
        local hexInput = Instance.new("TextBox")
        hexInput.Size = UDim2.new(1, -24, 0, 26)
        hexInput.Position = UDim2.new(0, 12, 0, 262)
        hexInput.BackgroundColor3 = Theme.ElementBackground
        hexInput.BorderSizePixel = 0
        hexInput.Text = string.format("#%02X%02X%02X",
            math.floor(colorPicker.Color.R * 255),
            math.floor(colorPicker.Color.G * 255),
            math.floor(colorPicker.Color.B * 255)
        )
        hexInput.TextColor3 = Theme.PrimaryText
        hexInput.TextSize = 12
        hexInput.Font = Enum.Font.Gotham
        hexInput.PlaceholderText = "#FFFFFF"
        hexInput.PlaceholderColor3 = Theme.DimText
        hexInput.ZIndex = 201
        hexInput.Parent = pickerFrame
        
        local hexCorner = Instance.new("UICorner")
        hexCorner.CornerRadius = UDim.new(0, 3)
        hexCorner.Parent = hexInput
        
        -- Color picker logic
        local hue, sat, val = colorPicker.Color:ToHSV()
        
        local function updateColor()
            colorPicker.Color = Color3.fromHSV(hue, sat, val)
            satValFrame.BackgroundColor3 = Color3.fromHSV(hue, 1, 1)
            satGradient.Color = ColorSequence.new({
                ColorSequenceKeypoint.new(0, Color3.new(1, 1, 1)),
                ColorSequenceKeypoint.new(1, Color3.fromHSV(hue, 1, 1))
            })
            
            rInput.Text = tostring(math.floor(colorPicker.Color.R * 255))
            gInput.Text = tostring(math.floor(colorPicker.Color.G * 255))
            bInput.Text = tostring(math.floor(colorPicker.Color.B * 255))
            hexInput.Text = string.format("#%02X%02X%02X",
                math.floor(colorPicker.Color.R * 255),
                math.floor(colorPicker.Color.G * 255),
                math.floor(colorPicker.Color.B * 255)
            )
            
            colorPicker.Callback(colorPicker.Color)
        end
        
        -- Saturation/Value selection
        local satValDragging = false
        
        satValFrame.MouseButton1Down:Connect(function()
            satValDragging = true
            local relativeX = math.clamp((Mouse.X - satValFrame.AbsolutePosition.X) / satValFrame.AbsoluteSize.X, 0, 1)
            local relativeY = math.clamp((Mouse.Y - satValFrame.AbsolutePosition.Y) / satValFrame.AbsoluteSize.Y, 0, 1)
            
            sat = relativeX
            val = 1 - relativeY
            
            satValCursor.Position = UDim2.new(relativeX, -4, relativeY, -4)
            updateColor()
        end)
        
        -- Hue selection
        local hueDragging = false
        
        hueFrame.MouseButton1Down:Connect(function()
            hueDragging = true
            local relativeY = math.clamp((Mouse.Y - hueFrame.AbsolutePosition.Y) / hueFrame.AbsoluteSize.Y, 0, 1)
            
            hue = relativeY
            hueCursor.Position = UDim2.new(0, -2, relativeY, -2)
            updateColor()
        end)
        
        UserInputService.InputChanged:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement then
                if satValDragging then
                    local relativeX = math.clamp((Mouse.X - satValFrame.AbsolutePosition.X) / satValFrame.AbsoluteSize.X, 0, 1)
                    local relativeY = math.clamp((Mouse.Y - satValFrame.AbsolutePosition.Y) / satValFrame.AbsoluteSize.Y, 0, 1)
                    
                    sat = relativeX
                    val = 1 - relativeY
                    
                    satValCursor.Position = UDim2.new(relativeX, -4, relativeY, -4)
                    updateColor()
                elseif hueDragging then
                    local relativeY = math.clamp((Mouse.Y - hueFrame.AbsolutePosition.Y) / hueFrame.AbsoluteSize.Y, 0, 1)
                    
                    hue = relativeY
                    hueCursor.Position = UDim2.new(0, -2, relativeY, -2)
                    updateColor()
                end
            end
        end)
        
        UserInputService.InputEnded:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                satValDragging = false
                hueDragging = false
            end
        end)
        
        -- Initialize positions
        satValCursor.Position = UDim2.new(sat, -4, 1 - val, -4)
        hueCursor.Position = UDim2.new(0, -2, hue, -2)
        updateColor()
        
        return colorPicker
    end
    
    -- Tab Selection (fixed)
    function window:SelectTab(tab)
        -- Hide all content
        for _, t in pairs(window.Tabs) do
            if t.Content then
                t.Content.Visible = false
            end
            if t.Button then
                t.Button.BackgroundTransparency = 0.5
                t.Button:FindFirstChild("TextLabel").TextColor3 = Theme.SecondaryText
            end
        end
        
        for _, bt in pairs(window.BottomTabs) do
            if bt.Content then
                bt.Content.Visible = false
            end
            if bt.IconLabel and bt.NameLabel then
                bt.IconLabel.TextColor3 = Theme.DimText
                bt.NameLabel.TextColor3 = Theme.DimText
            end
        end
        
        -- Show selected tab
        if tab.Content then
            tab.Content.Visible = true
        end
        if tab.Button then
            tab.Button.BackgroundTransparency = 0
            tab.Button:FindFirstChild("TextLabel").TextColor3 = Theme.PrimaryText
        end
        
        window.ActiveTab = tab
        window.ActiveBottomTab = nil
    end
    
    -- Bottom Tab Selection (fixed)
    function window:SelectBottomTab(bottomTab)
        -- Hide all content
        for _, t in pairs(window.Tabs) do
            if t.Content then
                t.Content.Visible = false
            end
            if t.Button then
                t.Button.BackgroundTransparency = 0.5
                t.Button:FindFirstChild("TextLabel").TextColor3 = Theme.SecondaryText
            end
        end
        
        for _, bt in pairs(window.BottomTabs) do
            if bt.Content then
                bt.Content.Visible = false
            end
            if bt.IconLabel and bt.NameLabel then
                bt.IconLabel.TextColor3 = Theme.DimText
                bt.NameLabel.TextColor3 = Theme.DimText
            end
        end
        
        -- Show selected bottom tab
        if bottomTab.Content then
            bottomTab.Content.Visible = true
        end
        if bottomTab.IconLabel and bottomTab.NameLabel then
            bottomTab.IconLabel.TextColor3 = Theme.Accent
            bottomTab.NameLabel.TextColor3 = Theme.Accent
        end
        
        window.ActiveBottomTab = bottomTab
        window.ActiveTab = nil
    end
    
    -- Toggle visibility
    function window:Toggle()
        mainFrame.Visible = not mainFrame.Visible
        shadowFrame.Visible = mainFrame.Visible
    end
    
    -- Keybind for toggle
    UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if not gameProcessed and input.KeyCode == toggleKey then
            window:Toggle()
        end
    end)
    
    return window
end

return PrimordialUI
