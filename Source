-- Primordial UI Library v7.0.0 - Executor Compatible
-- Fixed all errors, better notifications, working themes

local PrimordialUI = {}
PrimordialUI.__index = PrimordialUI

local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")

local Player = Players.LocalPlayer
local Mouse = Player:GetMouse()

-- Get proper parent for UI
local function GetUIParent()
    local success, result = pcall(function()
        return game:GetService("CoreGui")
    end)
    if success then
        return result
    else
        return Player:WaitForChild("PlayerGui")
    end
end

-- Theme System (Fixed initialization)
local Themes = {
    Dark = {
        MainBackground = Color3.fromRGB(18, 18, 18),
        PanelBackground = Color3.fromRGB(25, 25, 25),
        SectionBackground = Color3.fromRGB(32, 32, 32),
        ElementBackground = Color3.fromRGB(38, 38, 38),
        PrimaryText = Color3.fromRGB(255, 255, 255),
        SecondaryText = Color3.fromRGB(190, 190, 190),
        DimText = Color3.fromRGB(140, 140, 140),
        SectionTitle = Color3.fromRGB(160, 160, 160),
        Accent = Color3.fromRGB(100, 149, 237),
        AccentDim = Color3.fromRGB(70, 119, 207),
        CheckboxBorder = Color3.fromRGB(55, 55, 55),
        CheckboxFill = Color3.fromRGB(100, 149, 237),
        SliderTrack = Color3.fromRGB(45, 45, 45),
        SliderFill = Color3.fromRGB(100, 149, 237),
        SliderThumb = Color3.fromRGB(255, 255, 255),
        DropdownBorder = Color3.fromRGB(55, 55, 55),
        TabInactive = Color3.fromRGB(35, 35, 35),
        TabActive = Color3.fromRGB(100, 149, 237),
        TabHover = Color3.fromRGB(50, 50, 50),
        NotificationBackground = Color3.fromRGB(28, 28, 28),
        NotificationBorder = Color3.fromRGB(100, 149, 237),
        DividerColor = Color3.fromRGB(50, 50, 50),
        SuccessColor = Color3.fromRGB(67, 181, 129),
        ErrorColor = Color3.fromRGB(250, 82, 82),
        WarningColor = Color3.fromRGB(251, 189, 35)
    },
    Light = {
        MainBackground = Color3.fromRGB(240, 240, 240),
        PanelBackground = Color3.fromRGB(250, 250, 250),
        SectionBackground = Color3.fromRGB(255, 255, 255),
        ElementBackground = Color3.fromRGB(245, 245, 245),
        PrimaryText = Color3.fromRGB(0, 0, 0),
        SecondaryText = Color3.fromRGB(60, 60, 60),
        DimText = Color3.fromRGB(120, 120, 120),
        SectionTitle = Color3.fromRGB(80, 80, 80),
        Accent = Color3.fromRGB(100, 149, 237),
        AccentDim = Color3.fromRGB(130, 179, 255),
        CheckboxBorder = Color3.fromRGB(200, 200, 200),
        CheckboxFill = Color3.fromRGB(100, 149, 237),
        SliderTrack = Color3.fromRGB(220, 220, 220),
        SliderFill = Color3.fromRGB(100, 149, 237),
        SliderThumb = Color3.fromRGB(255, 255, 255),
        DropdownBorder = Color3.fromRGB(200, 200, 200),
        TabInactive = Color3.fromRGB(230, 230, 230),
        TabActive = Color3.fromRGB(100, 149, 237),
        TabHover = Color3.fromRGB(210, 210, 210),
        NotificationBackground = Color3.fromRGB(250, 250, 250),
        NotificationBorder = Color3.fromRGB(100, 149, 237),
        DividerColor = Color3.fromRGB(220, 220, 220),
        SuccessColor = Color3.fromRGB(67, 181, 129),
        ErrorColor = Color3.fromRGB(250, 82, 82),
        WarningColor = Color3.fromRGB(251, 189, 35)
    },
    Midnight = {
        MainBackground = Color3.fromRGB(10, 10, 15),
        PanelBackground = Color3.fromRGB(15, 15, 20),
        SectionBackground = Color3.fromRGB(20, 20, 28),
        ElementBackground = Color3.fromRGB(25, 25, 35),
        PrimaryText = Color3.fromRGB(255, 255, 255),
        SecondaryText = Color3.fromRGB(180, 180, 200),
        DimText = Color3.fromRGB(120, 120, 140),
        SectionTitle = Color3.fromRGB(150, 150, 170),
        Accent = Color3.fromRGB(138, 43, 226),
        AccentDim = Color3.fromRGB(108, 33, 196),
        CheckboxBorder = Color3.fromRGB(45, 45, 65),
        CheckboxFill = Color3.fromRGB(138, 43, 226),
        SliderTrack = Color3.fromRGB(35, 35, 55),
        SliderFill = Color3.fromRGB(138, 43, 226),
        SliderThumb = Color3.fromRGB(255, 255, 255),
        DropdownBorder = Color3.fromRGB(45, 45, 65),
        TabInactive = Color3.fromRGB(25, 25, 35),
        TabActive = Color3.fromRGB(138, 43, 226),
        TabHover = Color3.fromRGB(40, 40, 60),
        NotificationBackground = Color3.fromRGB(20, 20, 30),
        NotificationBorder = Color3.fromRGB(138, 43, 226),
        DividerColor = Color3.fromRGB(40, 40, 60),
        SuccessColor = Color3.fromRGB(67, 181, 129),
        ErrorColor = Color3.fromRGB(250, 82, 82),
        WarningColor = Color3.fromRGB(251, 189, 35)
    }
}

local CurrentTheme = "Dark"
local CurrentFont = Enum.Font.Gotham
local DPIScale = 1

local function GetTheme()
    return Themes[CurrentTheme]
end

-- Mobile Support Detection
local IsMobile = UserInputService.TouchEnabled and not UserInputService.KeyboardEnabled

-- Sizes Configuration
local function GetSizes()
    return {
        WindowWidth = 850 * DPIScale,
        WindowHeight = 650 * DPIScale,
        SidebarWidth = 70 * DPIScale,
        TopBarHeight = 38 * DPIScale,
        BottomBarHeight = 58 * DPIScale,
        SectionPadding = 12 * DPIScale,
        ElementHeight = 26 * DPIScale,
        ElementSpacing = 6 * DPIScale,
        CheckboxSize = 16 * DPIScale,
        SliderTrackHeight = 5 * DPIScale,
        SliderThumbSize = 12 * DPIScale
    }
end

-- Utility Functions
local function CreateTween(instance, properties, duration)
    duration = duration or 0.2
    local tween = TweenService:Create(
        instance,
        TweenInfo.new(duration, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
        properties
    )
    tween:Play()
    return tween
end

local function MakeDraggable(frame, handle)
    handle = handle or frame
    local dragging, dragInput, dragStart, startPos
    
    local function update(input)
        local delta = input.Position - dragStart
        frame.Position = UDim2.new(
            startPos.X.Scale,
            startPos.X.Offset + delta.X,
            startPos.Y.Scale,
            startPos.Y.Offset + delta.Y
        )
    end
    
    handle.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or 
           (IsMobile and input.UserInputType == Enum.UserInputType.Touch) then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    
    handle.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or
           (IsMobile and input.UserInputType == Enum.UserInputType.Touch) then
            dragInput = input
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            update(input)
        end
    end)
end

-- Main Library
function PrimordialUI:CreateWindow(options)
    options = options or {}
    local Theme = GetTheme()
    local Sizes = GetSizes()
    
    local window = {
        BottomTabs = {},
        ActiveBottomTab = nil,
        ActiveSideTab = nil,
        ColorPickers = {},
        Dropdowns = {},
        Dependencies = {},
        Tooltips = {},
        ScreenGui = nil,
        MainFrame = nil,
        OnUnload = nil,
        Watermark = nil,
        KeybindMenu = nil,
        NotificationHolder = nil
    }
    
    -- User Customization
    local logoAssetId = options.LogoAssetId or ""
    local toggleKey = options.ToggleKey or Enum.KeyCode.RightShift
    local menuTitle = options.Title or "primordial"
    local showWatermark = options.Watermark or false
    local showKeybindMenu = options.KeybindMenu or false
    
    -- Convert logo ID
    if logoAssetId ~= "" and not string.match(logoAssetId, "rbxassetid://") then
        logoAssetId = "rbxassetid://" .. logoAssetId
    end
    
    -- Create ScreenGui
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "PrimordialUI"
    screenGui.ResetOnSpawn = false
    screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    screenGui.DisplayOrder = 10
    screenGui.Parent = GetUIParent()
    window.ScreenGui = screenGui
    
    -- Better Notification System
    local notificationHolder = Instance.new("Frame")
    notificationHolder.Name = "NotificationHolder"
    notificationHolder.Size = UDim2.new(0, 320, 1, -20)
    notificationHolder.Position = UDim2.new(1, -330, 0, 10)
    notificationHolder.BackgroundTransparency = 1
    notificationHolder.Parent = screenGui
    window.NotificationHolder = notificationHolder
    
    local notificationLayout = Instance.new("UIListLayout")
    notificationLayout.SortOrder = Enum.SortOrder.LayoutOrder
    notificationLayout.Padding = UDim.new(0, 8)
    notificationLayout.VerticalAlignment = Enum.VerticalAlignment.Bottom
    notificationLayout.Parent = notificationHolder
    
    -- Notification Function
    function window:Notify(options)
        options = options or {}
        local text = options.Text or "Notification"
        local duration = options.Duration or 3
        local type = options.Type or "Info"
        
        local Theme = GetTheme()
        
        local notification = Instance.new("Frame")
        notification.Size = UDim2.new(1, 0, 0, 0)
        notification.AutomaticSize = Enum.AutomaticSize.Y
        notification.BackgroundColor3 = Theme.NotificationBackground
        notification.BackgroundTransparency = 0
        notification.Parent = notificationHolder
        
        local notifCorner = Instance.new("UICorner")
        notifCorner.CornerRadius = UDim.new(0, 8)
        notifCorner.Parent = notification
        
        -- Accent bar
        local accentBar = Instance.new("Frame")
        accentBar.Size = UDim2.new(0, 4, 1, 0)
        accentBar.BackgroundColor3 = type == "Success" and Theme.SuccessColor or 
                                     type == "Error" and Theme.ErrorColor or 
                                     type == "Warning" and Theme.WarningColor or
                                     Theme.Accent
        accentBar.BorderSizePixel = 0
        accentBar.Parent = notification
        
        local accentCorner = Instance.new("UICorner")
        accentCorner.CornerRadius = UDim.new(0, 8)
        accentCorner.Parent = accentBar
        
        -- Icon
        local icon = Instance.new("TextLabel")
        icon.Size = UDim2.new(0, 30, 0, 30)
        icon.Position = UDim2.new(0, 12, 0, 10)
        icon.BackgroundTransparency = 1
        icon.Text = type == "Success" and "✓" or 
                    type == "Error" and "✕" or 
                    type == "Warning" and "!" or "i"
        icon.TextColor3 = type == "Success" and Theme.SuccessColor or 
                         type == "Error" and Theme.ErrorColor or 
                         type == "Warning" and Theme.WarningColor or
                         Theme.Accent
        icon.TextSize = 18
        icon.Font = Enum.Font.GothamBold
        icon.Parent = notification
        
        -- Title
        local title = Instance.new("TextLabel")
        title.Size = UDim2.new(1, -90, 0, 20)
        title.Position = UDim2.new(0, 50, 0, 8)
        title.BackgroundTransparency = 1
        title.Text = type
        title.TextColor3 = Theme.PrimaryText
        title.TextSize = 14
        title.Font = Enum.Font.GothamBold
        title.TextXAlignment = Enum.TextXAlignment.Left
        title.Parent = notification
        
        -- Message
        local message = Instance.new("TextLabel")
        message.Size = UDim2.new(1, -60, 0, 0)
        message.AutomaticSize = Enum.AutomaticSize.Y
        message.Position = UDim2.new(0, 50, 0, 28)
        message.BackgroundTransparency = 1
        message.Text = text
        message.TextColor3 = Theme.SecondaryText
        message.TextSize = 13
        message.Font = Enum.Font.Gotham
        message.TextWrapped = true
        message.TextXAlignment = Enum.TextXAlignment.Left
        message.Parent = notification
        
        -- Close button
        local closeButton = Instance.new("TextButton")
        closeButton.Size = UDim2.new(0, 20, 0, 20)
        closeButton.Position = UDim2.new(1, -28, 0, 8)
        closeButton.BackgroundTransparency = 1
        closeButton.Text = "×"
        closeButton.TextColor3 = Theme.DimText
        closeButton.TextSize = 18
        closeButton.Font = Enum.Font.SourceSans
        closeButton.Parent = notification
        
        closeButton.MouseButton1Click:Connect(function()
            CreateTween(notification, {BackgroundTransparency = 1}, 0.2)
            CreateTween(accentBar, {BackgroundTransparency = 1}, 0.2)
            CreateTween(icon, {TextTransparency = 1}, 0.2)
            CreateTween(title, {TextTransparency = 1}, 0.2)
            CreateTween(message, {TextTransparency = 1}, 0.2)
            CreateTween(closeButton, {TextTransparency = 1}, 0.2)
            wait(0.2)
            notification:Destroy()
        end)
        
        -- Padding
        local padding = Instance.new("UIPadding")
        padding.PaddingBottom = UDim.new(0, 10)
        padding.Parent = notification
        
        -- Fade in animation
        notification.BackgroundTransparency = 1
        accentBar.BackgroundTransparency = 1
        icon.TextTransparency = 1
        title.TextTransparency = 1
        message.TextTransparency = 1
        closeButton.TextTransparency = 1
        
        CreateTween(notification, {BackgroundTransparency = 0}, 0.3)
        CreateTween(accentBar, {BackgroundTransparency = 0}, 0.3)
        CreateTween(icon, {TextTransparency = 0}, 0.3)
        CreateTween(title, {TextTransparency = 0}, 0.3)
        CreateTween(message, {TextTransparency = 0}, 0.3)
        CreateTween(closeButton, {TextTransparency = 0}, 0.3)
        
        -- Auto remove
        spawn(function()
            wait(duration)
            if notification.Parent then
                closeButton.MouseButton1Click:Fire() -- Simulate click
            end
        end)
    end
    
    -- Watermark
    if showWatermark then
        local watermark = Instance.new("Frame")
        watermark.Name = "Watermark"
        watermark.Size = UDim2.new(0, 250, 0, 35)
        watermark.Position = UDim2.new(0, 10, 0, 10)
        watermark.BackgroundColor3 = Theme.PanelBackground
        watermark.BackgroundTransparency = 0.1
        watermark.Parent = screenGui
        
        local waterCorner = Instance.new("UICorner")
        waterCorner.CornerRadius = UDim.new(0, 8)
        waterCorner.Parent = watermark
        
        local waterBorder = Instance.new("UIStroke")
        waterBorder.Color = Theme.Accent
        waterBorder.Thickness = 1
        waterBorder.Transparency = 0.8
        waterBorder.Parent = watermark
        
        local waterText = Instance.new("TextLabel")
        waterText.Size = UDim2.new(1, -10, 1, 0)
        waterText.Position = UDim2.new(0, 5, 0, 0)
        waterText.BackgroundTransparency = 1
        waterText.Text = menuTitle .. " | FPS: 0 | " .. os.date("%X")
        waterText.TextColor3 = Theme.PrimaryText
        waterText.TextSize = 12
        waterText.Font = CurrentFont
        waterText.TextXAlignment = Enum.TextXAlignment.Left
        waterText.Parent = watermark
        
        window.Watermark = watermark
        
        -- Update watermark
        spawn(function()
            while watermark.Parent do
                local fps = math.floor(1/RunService.RenderStepped:Wait())
                waterText.Text = menuTitle .. " | FPS: " .. fps .. " | " .. os.date("%X")
                wait(1)
            end
        end)
    end
    
    -- Main Frame
    local mainFrame = Instance.new("Frame")
    mainFrame.Name = "MainWindow"
    mainFrame.Size = UDim2.new(0, Sizes.WindowWidth, 0, Sizes.WindowHeight)
    mainFrame.Position = UDim2.new(0.5, -Sizes.WindowWidth/2, 0.5, -Sizes.WindowHeight/2)
    mainFrame.BackgroundColor3 = Theme.MainBackground
    mainFrame.BorderSizePixel = 0
    mainFrame.ClipsDescendants = true
    mainFrame.Parent = screenGui
    window.MainFrame = mainFrame
    
    local mainCorner = Instance.new("UICorner")
    mainCorner.CornerRadius = UDim.new(0, 10)
    mainCorner.Parent = mainFrame
    
    -- Top Bar
    local topBar = Instance.new("Frame")
    topBar.Name = "TopBar"
    topBar.Size = UDim2.new(1, 0, 0, Sizes.TopBarHeight)
    topBar.BackgroundColor3 = Theme.PanelBackground
    topBar.BorderSizePixel = 0
    topBar.Parent = mainFrame
    
    local topBarCorner = Instance.new("UICorner")
    topBarCorner.CornerRadius = UDim.new(0, 10)
    topBarCorner.Parent = topBar
    
    local topBarFix = Instance.new("Frame")
    topBarFix.Size = UDim2.new(1, 0, 0, 10)
    topBarFix.Position = UDim2.new(0, 0, 1, -10)
    topBarFix.BackgroundColor3 = Theme.PanelBackground
    topBarFix.BorderSizePixel = 0
    topBarFix.Parent = topBar
    
    -- Title
    local title = Instance.new("TextLabel")
    title.Name = "Title"
    title.Text = menuTitle:lower()
    title.Size = UDim2.new(1, 0, 1, 0)
    title.BackgroundTransparency = 1
    title.TextColor3 = Theme.PrimaryText
    title.TextSize = 15
    title.Font = CurrentFont
    title.Parent = topBar
    
    MakeDraggable(mainFrame, topBar)
    
    -- Left Sidebar with Scrollbar
    local sidebar = Instance.new("Frame")
    sidebar.Name = "Sidebar"
    sidebar.Position = UDim2.new(0, 0, 0, Sizes.TopBarHeight)
    sidebar.Size = UDim2.new(0, Sizes.SidebarWidth, 1, -Sizes.TopBarHeight - Sizes.BottomBarHeight)
    sidebar.BackgroundColor3 = Theme.PanelBackground
    sidebar.BorderSizePixel = 0
    sidebar.Parent = mainFrame
    
    -- Logo handling
    local logoHeight = 0
    if logoAssetId ~= "" then
        local success = pcall(function()
            local logoContainer = Instance.new("Frame")
            logoContainer.Name = "LogoContainer"
            logoContainer.Size = UDim2.new(0, 48, 0, 48)
            logoContainer.Position = UDim2.new(0.5, -24, 0, 12)
            logoContainer.BackgroundTransparency = 1
            logoContainer.Parent = sidebar
            
            local logo = Instance.new("ImageLabel")
            logo.Name = "Logo"
            logo.Size = UDim2.new(1, 0, 1, 0)
            logo.BackgroundTransparency = 1
            logo.Image = logoAssetId
            logo.ScaleType = Enum.ScaleType.Fit
            logo.Parent = logoContainer
            
            logoHeight = 60
        end)
        
        if not success then
            logoHeight = 10 -- Minimal spacing if logo fails
        end
    else
        logoHeight = 10 -- Minimal spacing if no logo
    end
    
    -- Sidebar Tabs Container with Scrollbar
    local sidebarScroll = Instance.new("ScrollingFrame")
    sidebarScroll.Name = "SidebarScroll"
    sidebarScroll.Position = UDim2.new(0, 0, 0, logoHeight + 5)
    sidebarScroll.Size = UDim2.new(1, 0, 1, -(logoHeight + 5))
    sidebarScroll.BackgroundTransparency = 1
    sidebarScroll.BorderSizePixel = 0
    sidebarScroll.ScrollBarThickness = 3
    sidebarScroll.ScrollBarImageColor3 = Theme.Accent
    sidebarScroll.ScrollBarImageTransparency = 0.5
    sidebarScroll.CanvasSize = UDim2.new(0, 0, 0, 0)
    sidebarScroll.Parent = sidebar
    
    local sidebarLayout = Instance.new("UIListLayout")
    sidebarLayout.SortOrder = Enum.SortOrder.LayoutOrder
    sidebarLayout.Padding = UDim.new(0, 6)
    sidebarLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    sidebarLayout.Parent = sidebarScroll
    
    -- Auto-resize sidebar scroll
    sidebarLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
        sidebarScroll.CanvasSize = UDim2.new(0, 0, 0, sidebarLayout.AbsoluteContentSize.Y)
    end)
    
    -- Content Container
    local contentContainer = Instance.new("Frame")
    contentContainer.Name = "ContentContainer"
    contentContainer.Position = UDim2.new(0, Sizes.SidebarWidth, 0, Sizes.TopBarHeight)
    contentContainer.Size = UDim2.new(1, -Sizes.SidebarWidth, 1, -Sizes.TopBarHeight - Sizes.BottomBarHeight)
    contentContainer.BackgroundTransparency = 1
    contentContainer.ClipsDescendants = true
    contentContainer.Parent = mainFrame
    
    -- Bottom Navigation Bar
    local bottomBar = Instance.new("Frame")
    bottomBar.Name = "BottomBar"
    bottomBar.Position = UDim2.new(0, 0, 1, -Sizes.BottomBarHeight)
    bottomBar.Size = UDim2.new(1, 0, 0, Sizes.BottomBarHeight)
    bottomBar.BackgroundColor3 = Theme.PanelBackground
    bottomBar.BorderSizePixel = 0
    bottomBar.Parent = mainFrame
    
    local bottomBarCorner = Instance.new("UICorner")
    bottomBarCorner.CornerRadius = UDim.new(0, 10)
    bottomBarCorner.Parent = bottomBar
    
    local bottomBarFix = Instance.new("Frame")
    bottomBarFix.Size = UDim2.new(1, 0, 0, 10)
    bottomBarFix.Position = UDim2.new(0, 0, 0, 0)
    bottomBarFix.BackgroundColor3 = Theme.PanelBackground
    bottomBarFix.BorderSizePixel = 0
    bottomBarFix.Parent = bottomBar
    
    local bottomTabsContainer = Instance.new("Frame")
    bottomTabsContainer.Size = UDim2.new(1, 0, 1, 0)
    bottomTabsContainer.BackgroundTransparency = 1
    bottomTabsContainer.Parent = bottomBar
    
    local bottomLayout = Instance.new("UIListLayout")
    bottomLayout.FillDirection = Enum.FillDirection.Horizontal
    bottomLayout.SortOrder = Enum.SortOrder.LayoutOrder
    bottomLayout.Parent = bottomTabsContainer
    
    -- Close all dropdowns
    local function closeAllDropdowns()
        for _, dropdown in pairs(window.Dropdowns) do
            if dropdown.List and dropdown.List.Visible then
                dropdown.List.Visible = false
                dropdown.Open = false
                if dropdown.Chevron then
                    dropdown.Chevron.Text = "▼"
                end
            end
        end
    end
    
    -- Update theme function
    function window:SetTheme(themeName)
        if Themes[themeName] then
            CurrentTheme = themeName
            local Theme = GetTheme()
            
            -- Update all UI elements with new theme colors
            mainFrame.BackgroundColor3 = Theme.MainBackground
            topBar.BackgroundColor3 = Theme.PanelBackground
            sidebar.BackgroundColor3 = Theme.PanelBackground
            bottomBar.BackgroundColor3 = Theme.PanelBackground
            title.TextColor3 = Theme.PrimaryText
            
            -- Update notification
            window:Notify({
                Text = "Theme changed to " .. themeName,
                Duration = 2,
                Type = "Success"
            })
        end
    end
    
    -- Create Bottom Tab
    function window:CreateBottomTab(name, icon)
        local bottomTab = {
            Name = name,
            Icon = icon,
            SideTabs = {},
            ActiveSideTab = nil,
            Button = nil
        }
        
        local Theme = GetTheme()
        local Sizes = GetSizes()
        
        local tabButton = Instance.new("TextButton")
        tabButton.Name = name
        tabButton.Size = UDim2.new(1/6, 0, 1, 0)
        tabButton.BackgroundTransparency = 1
        tabButton.Text = ""
        tabButton.AutoButtonColor = false
        tabButton.Parent = bottomTabsContainer
        
        local iconLabel = Instance.new("TextLabel")
        iconLabel.Size = UDim2.new(1, 0, 0, 26)
        iconLabel.Position = UDim2.new(0, 0, 0, 6)
        iconLabel.BackgroundTransparency = 1
        iconLabel.Text = icon or "?"
        iconLabel.TextColor3 = Theme.DimText
        iconLabel.TextSize = 20
        iconLabel.Font = CurrentFont
        iconLabel.Parent = tabButton
        
        local nameLabel = Instance.new("TextLabel")
        nameLabel.Size = UDim2.new(1, 0, 0, 14)
        nameLabel.Position = UDim2.new(0, 0, 1, -18)
        nameLabel.BackgroundTransparency = 1
        nameLabel.Text = name:lower()
        nameLabel.TextColor3 = Theme.DimText
        nameLabel.TextSize = 10
        nameLabel.Font = CurrentFont
        nameLabel.Parent = tabButton
        
        bottomTab.Button = tabButton
        bottomTab.IconLabel = iconLabel
        bottomTab.NameLabel = nameLabel
        
        tabButton.MouseButton1Click:Connect(function()
            closeAllDropdowns()
            window:SelectBottomTab(bottomTab)
        end)
        
        tabButton.MouseEnter:Connect(function()
            if window.ActiveBottomTab ~= bottomTab then
                CreateTween(iconLabel, {TextColor3 = Theme.SecondaryText}, 0.15)
                CreateTween(nameLabel, {TextColor3 = Theme.SecondaryText}, 0.15)
            end
        end)
        
        tabButton.MouseLeave:Connect(function()
            if window.ActiveBottomTab ~= bottomTab then
                CreateTween(iconLabel, {TextColor3 = Theme.DimText}, 0.15)
                CreateTween(nameLabel, {TextColor3 = Theme.DimText}, 0.15)
            end
        end)
        
        -- Create Side Tab
        function bottomTab:CreateSideTab(name)
            local sideTab = {
                Name = name,
                Sections = {},
                Content = nil,
                Button = nil
            }
            
            local Theme = GetTheme()
            local Sizes = GetSizes()
            
            local sideButton = Instance.new("TextButton")
            sideButton.Name = name
            sideButton.Size = UDim2.new(0, Sizes.SidebarWidth - 16, 0, 42)
            sideButton.BackgroundColor3 = Theme.TabInactive
            sideButton.BackgroundTransparency = 0.5
            sideButton.BorderSizePixel = 0
            sideButton.AutoButtonColor = false
            sideButton.Text = ""
            sideButton.Visible = false
            sideButton.Parent = sidebarScroll
            
            local sideCorner = Instance.new("UICorner")
            sideCorner.CornerRadius = UDim.new(0, 6)
            sideCorner.Parent = sideButton
            
            local sideLabel = Instance.new("TextLabel")
            sideLabel.Size = UDim2.new(1, 0, 1, 0)
            sideLabel.BackgroundTransparency = 1
            sideLabel.Text = name:lower()
            sideLabel.TextColor3 = Theme.SecondaryText
            sideLabel.TextSize = 12
            sideLabel.Font = CurrentFont
            sideLabel.Parent = sideButton
            
            local sideContent = Instance.new("ScrollingFrame")
            sideContent.Name = name .. "Content"
            sideContent.Size = UDim2.new(1, -Sizes.SectionPadding * 2, 1, -Sizes.SectionPadding * 2)
            sideContent.Position = UDim2.new(0, Sizes.SectionPadding, 0, Sizes.SectionPadding)
            sideContent.BackgroundTransparency = 1
            sideContent.BorderSizePixel = 0
            sideContent.ScrollBarThickness = 4
            sideContent.ScrollBarImageColor3 = Theme.Accent
            sideContent.ScrollBarImageTransparency = 0.5
            sideContent.Visible = false
            sideContent.ClipsDescendants = true
            sideContent.CanvasSize = UDim2.new(0, 0, 0, 0)
            sideContent.Parent = contentContainer
            
            local contentGrid = Instance.new("UIGridLayout")
            contentGrid.CellSize = UDim2.new(0.31, 0, 0, 200)
            contentGrid.CellPadding = UDim2.new(0.035, 0, 0, 12)
            contentGrid.SortOrder = Enum.SortOrder.LayoutOrder
            contentGrid.FillDirection = Enum.FillDirection.Horizontal
            contentGrid.Parent = sideContent
            
            contentGrid:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
                sideContent.CanvasSize = UDim2.new(0, 0, 0, contentGrid.AbsoluteContentSize.Y)
            end)
            
            sideButton.MouseButton1Click:Connect(function()
                closeAllDropdowns()
                bottomTab:SelectSideTab(sideTab)
            end)
            
            sideButton.MouseEnter:Connect(function()
                if bottomTab.ActiveSideTab ~= sideTab then
                    CreateTween(sideButton, {BackgroundTransparency = 0.3})
                end
            end)
            
            sideButton.MouseLeave:Connect(function()
                if bottomTab.ActiveSideTab ~= sideTab then
                    CreateTween(sideButton, {BackgroundTransparency = 0.5})
                end
            end)
            
            sideTab.Button = sideButton
            sideTab.Content = sideContent
            
            -- Create Section
            function sideTab:CreateSection(sectionName)
                local section = {
                    Elements = {},
                    Frame = nil
                }
                
                local Theme = GetTheme()
                local Sizes = GetSizes()
                
                local sectionContainer = Instance.new("Frame")
                sectionContainer.Name = sectionName .. "Container"
                sectionContainer.BackgroundTransparency = 1
                sectionContainer.Parent = sideContent
                
                local sectionFrame = Instance.new("Frame")
                sectionFrame.Name = sectionName
                sectionFrame.Size = UDim2.new(1, 0, 0, 0)
                sectionFrame.BackgroundColor3 = Theme.SectionBackground
                sectionFrame.BackgroundTransparency = 0.1
                sectionFrame.BorderSizePixel = 0
                sectionFrame.AutomaticSize = Enum.AutomaticSize.Y
                sectionFrame.Parent = sectionContainer
                
                local sectionCorner = Instance.new("UICorner")
                sectionCorner.CornerRadius = UDim.new(0, 8)
                sectionCorner.Parent = sectionFrame
                
                local sectionTitle = Instance.new("TextLabel")
                sectionTitle.Name = "Title"
                sectionTitle.Text = sectionName:lower()
                sectionTitle.Size = UDim2.new(1, -Sizes.SectionPadding * 2, 0, 22)
                sectionTitle.Position = UDim2.new(0, Sizes.SectionPadding, 0, 6)
                sectionTitle.BackgroundTransparency = 1
                sectionTitle.TextColor3 = Theme.SectionTitle
                sectionTitle.TextSize = 12
                sectionTitle.Font = CurrentFont
                sectionTitle.TextXAlignment = Enum.TextXAlignment.Left
                sectionTitle.Parent = sectionFrame
                
                local elementsContainer = Instance.new("Frame")
                elementsContainer.Name = "Elements"
                elementsContainer.Position = UDim2.new(0, Sizes.SectionPadding, 0, 32)
                elementsContainer.Size = UDim2.new(1, -Sizes.SectionPadding * 2, 0, 0)
                elementsContainer.AutomaticSize = Enum.AutomaticSize.Y
                elementsContainer.BackgroundTransparency = 1
                elementsContainer.Parent = sectionFrame
                
                local elementLayout = Instance.new("UIListLayout")
                elementLayout.SortOrder = Enum.SortOrder.LayoutOrder
                elementLayout.Padding = UDim.new(0, Sizes.ElementSpacing)
                elementLayout.Parent = elementsContainer
                
                local bottomPadding = Instance.new("Frame")
                bottomPadding.Name = "BottomPadding"
                bottomPadding.Size = UDim2.new(1, 0, 0, Sizes.SectionPadding)
                bottomPadding.BackgroundTransparency = 1
                bottomPadding.LayoutOrder = 999999
                bottomPadding.Parent = elementsContainer
                
                sectionFrame:GetPropertyChangedSignal("AbsoluteSize"):Connect(function()
                    sectionContainer.Size = UDim2.new(1, 0, 0, sectionFrame.AbsoluteSize.Y)
                    contentGrid.CellSize = UDim2.new(0.31, 0, 0, sectionFrame.AbsoluteSize.Y)
                end)
                
                section.Frame = sectionFrame
                
                -- All element creation functions (simplified for space)
                function section:CreateCheckbox(options)
                    options = options or {}
                    local Theme = GetTheme()
                    local Sizes = GetSizes()
                    
                    local checkbox = {
                        Value = options.Default or false,
                        Callback = options.Callback or function() end
                    }
                    
                    local checkboxFrame = Instance.new("Frame")
                    checkboxFrame.Name = options.Name or "Checkbox"
                    checkboxFrame.Size = UDim2.new(1, 0, 0, Sizes.ElementHeight)
                    checkboxFrame.BackgroundTransparency = 1
                    checkboxFrame.Parent = elementsContainer
                    
                    local checkButton = Instance.new("TextButton")
                    checkButton.Size = UDim2.new(0, Sizes.CheckboxSize, 0, Sizes.CheckboxSize)
                    checkButton.Position = UDim2.new(0, 0, 0.5, -Sizes.CheckboxSize/2)
                    checkButton.BackgroundColor3 = Theme.CheckboxBorder
                    checkButton.BackgroundTransparency = 0.3
                    checkButton.BorderSizePixel = 0
                    checkButton.Text = ""
                    checkButton.AutoButtonColor = false
                    checkButton.Parent = checkboxFrame
                    
                    local checkCorner = Instance.new("UICorner")
                    checkCorner.CornerRadius = UDim.new(0, 3)
                    checkCorner.Parent = checkButton
                    
                    local checkMark = Instance.new("Frame")
                    checkMark.Name = "CheckMark"
                    checkMark.Size = UDim2.new(1, -4, 1, -4)
                    checkMark.Position = UDim2.new(0, 2, 0, 2)
                    checkMark.BackgroundColor3 = Theme.CheckboxFill
                    checkMark.BorderSizePixel = 0
                    checkMark.BackgroundTransparency = checkbox.Value and 0 or 1
                    checkMark.Parent = checkButton
                    
                    local markCorner = Instance.new("UICorner")
                    markCorner.CornerRadius = UDim.new(0, 2)
                    markCorner.Parent = checkMark
                    
                    local label = Instance.new("TextLabel")
                    label.Text = options.Name or "Checkbox"
                    label.Position = UDim2.new(0, Sizes.CheckboxSize + 6, 0, 0)
                    label.Size = UDim2.new(1, -(Sizes.CheckboxSize + 6), 1, 0)
                    label.BackgroundTransparency = 1
                    label.TextColor3 = Theme.PrimaryText
                    label.TextSize = 12
                    label.Font = CurrentFont
                    label.TextXAlignment = Enum.TextXAlignment.Left
                    label.Parent = checkboxFrame
                    
                    if options.ColorPicker then
                        local colorButton = Instance.new("TextButton")
                        colorButton.Size = UDim2.new(0, 28, 0, 16)
                        colorButton.Position = UDim2.new(1, -36, 0.5, -8)
                        colorButton.BackgroundColor3 = options.ColorPicker.Default or Color3.new(1, 1, 1)
                        colorButton.BorderSizePixel = 0
                        colorButton.Text = ""
                        colorButton.AutoButtonColor = false
                        colorButton.Parent = checkboxFrame
                        
                        local colorCorner = Instance.new("UICorner")
                        colorCorner.CornerRadius = UDim.new(0, 3)
                        colorCorner.Parent = colorButton
                        
                        local colorBorder = Instance.new("UIStroke")
                        colorBorder.Color = Theme.CheckboxBorder
                        colorBorder.Thickness = 1
                        colorBorder.Transparency = 0.5
                        colorBorder.Parent = colorButton
                        
                        colorButton.MouseButton1Click:Connect(function()
                            window:CreateColorPicker({
                                Default = colorButton.BackgroundColor3,
                                Callback = function(color)
                                    colorButton.BackgroundColor3 = color
                                    if options.ColorPicker.Callback then
                                        options.ColorPicker.Callback(color)
                                    end
                                end
                            })
                        end)
                    end
                    
                    function checkbox:Set(value)
                        checkbox.Value = value
                        CreateTween(checkMark, {BackgroundTransparency = value and 0 or 1}, 0.15)
                        checkbox.Callback(value)
                    end
                    
                    checkButton.MouseButton1Click:Connect(function()
                        checkbox:Set(not checkbox.Value)
                    end)
                    
                    return checkbox
                end
                
                function section:CreateSlider(options)
                    options = options or {}
                    local Theme = GetTheme()
                    local Sizes = GetSizes()
                    
                    local slider = {
                        Value = options.Default or options.Min or 0,
                        Callback = options.Callback or function() end
                    }
                    
                    local sliderFrame = Instance.new("Frame")
                    sliderFrame.Name = options.Name or "Slider"
                    sliderFrame.Size = UDim2.new(1, 0, 0, Sizes.ElementHeight + 20)
                    sliderFrame.BackgroundTransparency = 1
                    sliderFrame.Parent = elementsContainer
                    
                    local label = Instance.new("TextLabel")
                    label.Text = options.Name or "Slider"
                    label.Size = UDim2.new(0.65, 0, 0, 18)
                    label.BackgroundTransparency = 1
                    label.TextColor3 = Theme.PrimaryText
                    label.TextSize = 12
                    label.Font = CurrentFont
                    label.TextXAlignment = Enum.TextXAlignment.Left
                    label.Parent = sliderFrame
                    
                    local valueLabel = Instance.new("TextLabel")
                    valueLabel.Text = tostring(slider.Value) .. (options.Suffix or "")
                    valueLabel.Size = UDim2.new(0.35, 0, 0, 18)
                    valueLabel.Position = UDim2.new(0.65, 0, 0, 0)
                    valueLabel.BackgroundTransparency = 1
                    valueLabel.TextColor3 = Theme.SecondaryText
                    valueLabel.TextSize = 12
                    valueLabel.Font = CurrentFont
                    valueLabel.TextXAlignment = Enum.TextXAlignment.Right
                    valueLabel.Parent = sliderFrame
                    
                    local sliderTrack = Instance.new("Frame")
                    sliderTrack.Size = UDim2.new(1, 0, 0, Sizes.SliderTrackHeight)
                    sliderTrack.Position = UDim2.new(0, 0, 0, 24)
                    sliderTrack.BackgroundColor3 = Theme.SliderTrack
                    sliderTrack.BorderSizePixel = 0
                    sliderTrack.Parent = sliderFrame
                    
                    local trackCorner = Instance.new("UICorner")
                    trackCorner.CornerRadius = UDim.new(0, Sizes.SliderTrackHeight/2)
                    trackCorner.Parent = sliderTrack
                    
                    local sliderFill = Instance.new("Frame")
                    sliderFill.Size = UDim2.new(0.5, 0, 1, 0)
                    sliderFill.BackgroundColor3 = Theme.SliderFill
                    sliderFill.BorderSizePixel = 0
                    sliderFill.Parent = sliderTrack
                    
                    local fillCorner = Instance.new("UICorner")
                    fillCorner.CornerRadius = UDim.new(0, Sizes.SliderTrackHeight/2)
                    fillCorner.Parent = sliderFill
                    
                    local sliderThumb = Instance.new("TextButton")
                    sliderThumb.Size = UDim2.new(0, Sizes.SliderThumbSize, 0, Sizes.SliderThumbSize)
                    sliderThumb.Position = UDim2.new(0.5, -Sizes.SliderThumbSize/2, 0.5, -Sizes.SliderThumbSize/2)
                    sliderThumb.BackgroundColor3 = Theme.SliderThumb
                    sliderThumb.BorderSizePixel = 0
                    sliderThumb.Text = ""
                    sliderThumb.AutoButtonColor = false
                    sliderThumb.Parent = sliderTrack
                    
                    local thumbCorner = Instance.new("UICorner")
                    thumbCorner.CornerRadius = UDim.new(1, 0)
                    thumbCorner.Parent = sliderThumb
                    
                    local function updateSlider(input)
                        local min = options.Min or 0
                        local max = options.Max or 100
                        local mousePos = UserInputService:GetMouseLocation()
                        local relativePos = mousePos.X - sliderTrack.AbsolutePosition.X
                        local percentage = math.clamp(relativePos / sliderTrack.AbsoluteSize.X, 0, 1)
                        
                        slider.Value = math.floor(min + (max - min) * percentage)
                        sliderFill.Size = UDim2.new(percentage, 0, 1, 0)
                        sliderThumb.Position = UDim2.new(percentage, -Sizes.SliderThumbSize/2, 0.5, -Sizes.SliderThumbSize/2)
                        valueLabel.Text = tostring(slider.Value) .. (options.Suffix or "")
                        slider.Callback(slider.Value)
                    end
                    
                    local dragging = false
                    
                    sliderThumb.MouseButton1Down:Connect(function()
                        dragging = true
                    end)
                    
                    sliderTrack.InputBegan:Connect(function(input)
                        if input.UserInputType == Enum.UserInputType.MouseButton1 then
                            dragging = true
                            updateSlider(input)
                        end
                    end)
                    
                    UserInputService.InputEnded:Connect(function(input)
                        if input.UserInputType == Enum.UserInputType.MouseButton1 then
                            dragging = false
                        end
                    end)
                    
                    UserInputService.InputChanged:Connect(function(input)
                        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                            updateSlider(input)
                        end
                    end)
                    
                    function slider:Set(value)
                        local min = options.Min or 0
                        local max = options.Max or 100
                        slider.Value = math.clamp(value, min, max)
                        local percentage = (slider.Value - min) / (max - min)
                        sliderFill.Size = UDim2.new(percentage, 0, 1, 0)
                        sliderThumb.Position = UDim2.new(percentage, -Sizes.SliderThumbSize/2, 0.5, -Sizes.SliderThumbSize/2)
                        valueLabel.Text = tostring(slider.Value) .. (options.Suffix or "")
                        slider.Callback(slider.Value)
                    end
                    
                    slider:Set(slider.Value)
                    
                    return slider
                end
                
                function section:CreateDropdown(options)
                    options = options or {}
                    local Theme = GetTheme()
                    local Sizes = GetSizes()
                    
                    local dropdown = {
                        Value = options.Default or (options.Options[1] or ""),
                        Callback = options.Callback or function() end,
                        Open = false,
                        List = nil,
                        Chevron = nil
                    }
                    
                    local dropdownFrame = Instance.new("Frame")
                    dropdownFrame.Name = options.Name or "Dropdown"
                    dropdownFrame.Size = UDim2.new(1, 0, 0, Sizes.ElementHeight)
                    dropdownFrame.BackgroundTransparency = 1
                    dropdownFrame.Parent = elementsContainer
                    
                    local label = Instance.new("TextLabel")
                    label.Text = options.Name or "Dropdown"
                    label.Size = UDim2.new(0.38, 0, 1, 0)
                    label.BackgroundTransparency = 1
                    label.TextColor3 = Theme.PrimaryText
                    label.TextSize = 12
                    label.Font = CurrentFont
                    label.TextXAlignment = Enum.TextXAlignment.Left
                    label.Parent = dropdownFrame
                    
                    local dropButton = Instance.new("TextButton")
                    dropButton.Size = UDim2.new(0.62, -4, 1, 0)
                    dropButton.Position = UDim2.new(0.38, 4, 0, 0)
                    dropButton.BackgroundColor3 = Theme.ElementBackground
                    dropButton.BorderSizePixel = 0
                    dropButton.Text = dropdown.Value
                    dropButton.TextColor3 = Theme.SecondaryText
                    dropButton.TextSize = 12
                    dropButton.Font = CurrentFont
                    dropButton.AutoButtonColor = false
                    dropButton.ClipsDescendants = true
                    dropButton.Parent = dropdownFrame
                    
                    local dropCorner = Instance.new("UICorner")
                    dropCorner.CornerRadius = UDim.new(0, 4)
                    dropCorner.Parent = dropButton
                    
                    local dropBorder = Instance.new("UIStroke")
                    dropBorder.Color = Theme.DropdownBorder
                    dropBorder.Thickness = 1
                    dropBorder.Transparency = 0.5
                    dropBorder.Parent = dropButton
                    
                    local chevron = Instance.new("TextLabel")
                    chevron.Text = "▼"
                    chevron.Size = UDim2.new(0, 20, 1, 0)
                    chevron.Position = UDim2.new(1, -20, 0, 0)
                    chevron.BackgroundTransparency = 1
                    chevron.TextColor3 = Theme.DimText
                    chevron.TextSize = 10
                    chevron.Font = CurrentFont
                    chevron.Parent = dropButton
                    dropdown.Chevron = chevron
                    
                    local dropList = Instance.new("Frame")
                    dropList.Size = UDim2.new(0, dropButton.AbsoluteSize.X, 0, math.min(#options.Options * 26, 130))
                    dropList.BackgroundColor3 = Theme.ElementBackground
                    dropList.BorderSizePixel = 0
                    dropList.Visible = false
                    dropList.ZIndex = 1000
                    dropList.Parent = screenGui
                    dropdown.List = dropList
                    
                    table.insert(window.Dropdowns, dropdown)
                    
                    local listCorner = Instance.new("UICorner")
                    listCorner.CornerRadius = UDim.new(0, 4)
                    listCorner.Parent = dropList
                    
                    local listBorder = Instance.new("UIStroke")
                    listBorder.Color = Theme.DropdownBorder
                    listBorder.Thickness = 1
                    listBorder.Parent = dropList
                    
                    local listScroll = Instance.new("ScrollingFrame")
                    listScroll.Size = UDim2.new(1, -4, 1, -4)
                    listScroll.Position = UDim2.new(0, 2, 0, 2)
                    listScroll.BackgroundTransparency = 1
                    listScroll.BorderSizePixel = 0
                    listScroll.ScrollBarThickness = 3
                    listScroll.ScrollBarImageColor3 = Theme.Accent
                    listScroll.ClipsDescendants = true
                    listScroll.ZIndex = 1001
                    listScroll.Parent = dropList
                    
                    local listLayout = Instance.new("UIListLayout")
                    listLayout.SortOrder = Enum.SortOrder.LayoutOrder
                    listLayout.Parent = listScroll
                    
                    local function updateDropListPosition()
                        if dropList.Visible then
                            local buttonPos = dropButton.AbsolutePosition
                            local buttonSize = dropButton.AbsoluteSize
                            dropList.Position = UDim2.new(0, buttonPos.X, 0, buttonPos.Y + buttonSize.Y + 4)
                            dropList.Size = UDim2.new(0, buttonSize.X, 0, math.min(#options.Options * 26, 130))
                        end
                    end
                    
                    for _, option in ipairs(options.Options or {}) do
                        local optionButton = Instance.new("TextButton")
                        optionButton.Size = UDim2.new(1, 0, 0, 26)
                        optionButton.BackgroundTransparency = 1
                        optionButton.Text = option
                        optionButton.TextColor3 = Theme.SecondaryText
                        optionButton.TextSize = 12
                        optionButton.Font = CurrentFont
                        optionButton.AutoButtonColor = false
                        optionButton.ZIndex = 1002
                        optionButton.Parent = listScroll
                        
                        optionButton.MouseEnter:Connect(function()
                            CreateTween(optionButton, {BackgroundTransparency = 0.9}, 0.1)
                            optionButton.BackgroundColor3 = Theme.TabHover
                            optionButton.TextColor3 = Theme.PrimaryText
                        end)
                        
                        optionButton.MouseLeave:Connect(function()
                            CreateTween(optionButton, {BackgroundTransparency = 1}, 0.1)
                            optionButton.TextColor3 = Theme.SecondaryText
                        end)
                        
                        optionButton.MouseButton1Click:Connect(function()
                            dropdown.Value = option
                            dropButton.Text = option
                            dropList.Visible = false
                            dropdown.Open = false
                            chevron.Text = "▼"
                            dropdown.Callback(option)
                        end)
                    end
                    
                    dropButton.MouseButton1Click:Connect(function()
                        for _, otherDropdown in pairs(window.Dropdowns) do
                            if otherDropdown ~= dropdown and otherDropdown.List and otherDropdown.List.Visible then
                                otherDropdown.List.Visible = false
                                otherDropdown.Open = false
                                if otherDropdown.Chevron then
                                    otherDropdown.Chevron.Text = "▼"
                                end
                            end
                        end
                        
                        dropdown.Open = not dropdown.Open
                        dropList.Visible = dropdown.Open
                        chevron.Text = dropdown.Open and "▲" or "▼"
                        if dropdown.Open then
                            updateDropListPosition()
                        end
                    end)
                    
                    mainFrame:GetPropertyChangedSignal("AbsolutePosition"):Connect(updateDropListPosition)
                    dropdownFrame:GetPropertyChangedSignal("AbsolutePosition"):Connect(updateDropListPosition)
                    
                    return dropdown
                end
                
                function section:CreateButton(options)
                    options = options or {}
                    local Theme = GetTheme()
                    local Sizes = GetSizes()
                    
                    local button = {
                        Callback = options.Callback or function() end
                    }
                    
                    local buttonFrame = Instance.new("TextButton")
                    buttonFrame.Name = options.Name or "Button"
                    buttonFrame.Size = UDim2.new(1, 0, 0, Sizes.ElementHeight + 2)
                    buttonFrame.BackgroundColor3 = Theme.Accent
                    buttonFrame.BackgroundTransparency = 0.1
                    buttonFrame.BorderSizePixel = 0
                    buttonFrame.Text = options.Name or "Button"
                    buttonFrame.TextColor3 = Theme.PrimaryText
                    buttonFrame.TextSize = 12
                    buttonFrame.Font = CurrentFont
                    buttonFrame.AutoButtonColor = false
                    buttonFrame.Parent = elementsContainer
                    
                    local buttonCorner = Instance.new("UICorner")
                    buttonCorner.CornerRadius = UDim.new(0, 4)
                    buttonCorner.Parent = buttonFrame
                    
                    buttonFrame.MouseButton1Click:Connect(function()
                        CreateTween(buttonFrame, {BackgroundTransparency = 0.3}, 0.1)
                        wait(0.1)
                        CreateTween(buttonFrame, {BackgroundTransparency = 0.1}, 0.1)
                        button.Callback()
                    end)
                    
                    buttonFrame.MouseEnter:Connect(function()
                        CreateTween(buttonFrame, {BackgroundTransparency = 0}, 0.15)
                    end)
                    
                    buttonFrame.MouseLeave:Connect(function()
                        CreateTween(buttonFrame, {BackgroundTransparency = 0.1}, 0.15)
                    end)
                    
                    return button
                end
                
                function section:CreateKeybind(options)
                    options = options or {}
                    local Theme = GetTheme()
                    local Sizes = GetSizes()
                    
                    local keybind = {
                        Key = options.Default,
                        Callback = options.Callback or function() end,
                        Listening = false
                    }
                    
                    if not keybind.Key then
                        keybind.Key = Enum.KeyCode.F
                    end
                    
                    local keybindFrame = Instance.new("Frame")
                    keybindFrame.Name = options.Name or "Keybind"
                    keybindFrame.Size = UDim2.new(1, 0, 0, Sizes.ElementHeight)
                    keybindFrame.BackgroundTransparency = 1
                    keybindFrame.Parent = elementsContainer
                    
                    local label = Instance.new("TextLabel")
                    label.Text = options.Name or "Keybind"
                    label.Size = UDim2.new(0.65, 0, 1, 0)
                    label.BackgroundTransparency = 1
                    label.TextColor3 = Theme.PrimaryText
                    label.TextSize = 12
                    label.Font = CurrentFont
                    label.TextXAlignment = Enum.TextXAlignment.Left
                    label.Parent = keybindFrame
                    
                    local keyButton = Instance.new("TextButton")
                    keyButton.Size = UDim2.new(0, 55, 0, 20)
                    keyButton.Position = UDim2.new(1, -55, 0.5, -10)
                    keyButton.BackgroundColor3 = Theme.ElementBackground
                    keyButton.BorderSizePixel = 0
                    keyButton.TextColor3 = Theme.SecondaryText
                    keyButton.TextSize = 11
                    keyButton.Font = CurrentFont
                    keyButton.AutoButtonColor = false
                    keyButton.Parent = keybindFrame
                    
                    local function getKeyName()
                        if typeof(keybind.Key) == "EnumItem" then
                            if keybind.Key.EnumType == Enum.KeyCode then
                                return keybind.Key.Name
                            elseif keybind.Key.EnumType == Enum.UserInputType then
                                if keybind.Key == Enum.UserInputType.MouseButton1 then
                                    return "MB1"
                                elseif keybind.Key == Enum.UserInputType.MouseButton2 then
                                    return "MB2"
                                elseif keybind.Key == Enum.UserInputType.MouseButton3 then
                                    return "MB3"
                                else
                                    return keybind.Key.Name
                                end
                            end
                        end
                        return "None"
                    end
                    
                    keyButton.Text = getKeyName()
                    
                    local keyCorner = Instance.new("UICorner")
                    keyCorner.CornerRadius = UDim.new(0, 3)
                    keyCorner.Parent = keyButton
                    
                    local keyBorder = Instance.new("UIStroke")
                    keyBorder.Color = Theme.CheckboxBorder
                    keyBorder.Thickness = 1
                    keyBorder.Transparency = 0.5
                    keyBorder.Parent = keyButton
                    
                    keyButton.MouseButton1Click:Connect(function()
                        keybind.Listening = true
                        keyButton.Text = "..."
                        keyButton.TextColor3 = Theme.Accent
                    end)
                    
                    UserInputService.InputBegan:Connect(function(input, gameProcessed)
                        if keybind.Listening then
                            if input.UserInputType == Enum.UserInputType.Keyboard then
                                keybind.Key = input.KeyCode
                            elseif input.UserInputType == Enum.UserInputType.MouseButton1 or
                                   input.UserInputType == Enum.UserInputType.MouseButton2 or
                                   input.UserInputType == Enum.UserInputType.MouseButton3 then
                                keybind.Key = input.UserInputType
                            end
                            keyButton.Text = getKeyName()
                            keyButton.TextColor3 = Theme.SecondaryText
                            keybind.Listening = false
                        elseif not gameProcessed then
                            if (typeof(keybind.Key) == "EnumItem") then
                                if (keybind.Key.EnumType == Enum.KeyCode and input.KeyCode == keybind.Key) or
                                   (keybind.Key.EnumType == Enum.UserInputType and input.UserInputType == keybind.Key) then
                                    keybind.Callback()
                                end
                            end
                        end
                    end)
                    
                    return keybind
                end
                
                return section
            end
            
            table.insert(bottomTab.SideTabs, sideTab)
            return sideTab
        end
        
        function bottomTab:SelectSideTab(sideTab)
            local Theme = GetTheme()
            
            for _, st in pairs(bottomTab.SideTabs) do
                if st.Content then
                    st.Content.Visible = false
                end
                if st.Button then
                    st.Button.BackgroundTransparency = 0.5
                    st.Button:FindFirstChild("TextLabel").TextColor3 = Theme.SecondaryText
                end
            end
            
            if sideTab.Content then
                sideTab.Content.Visible = true
            end
            if sideTab.Button then
                sideTab.Button.BackgroundTransparency = 0
                sideTab.Button:FindFirstChild("TextLabel").TextColor3 = Theme.PrimaryText
            end
            
            bottomTab.ActiveSideTab = sideTab
            window.ActiveSideTab = sideTab
        end
        
        table.insert(window.BottomTabs, bottomTab)
        return bottomTab
    end
    
    -- Select Bottom Tab
    function window:SelectBottomTab(bottomTab)
        local Theme = GetTheme()
        
        for _, bt in pairs(window.BottomTabs) do
            for _, st in pairs(bt.SideTabs) do
                if st.Button then
                    st.Button.Visible = false
                end
                if st.Content then
                    st.Content.Visible = false
                end
            end
            if bt.IconLabel and bt.NameLabel then
                bt.IconLabel.TextColor3 = Theme.DimText
                bt.NameLabel.TextColor3 = Theme.DimText
            end
        end
        
        for _, st in pairs(bottomTab.SideTabs) do
            if st.Button then
                st.Button.Visible = true
            end
        end
        
        if bottomTab.IconLabel and bottomTab.NameLabel then
            bottomTab.IconLabel.TextColor3 = Theme.Accent
            bottomTab.NameLabel.TextColor3 = Theme.Accent
        end
        
        window.ActiveBottomTab = bottomTab
        
        if #bottomTab.SideTabs > 0 then
            bottomTab:SelectSideTab(bottomTab.SideTabs[1])
        end
    end
    
    -- Fixed Color Picker
    function window:CreateColorPicker(options)
        options = options or {}
        local Theme = GetTheme()
        
        for _, picker in pairs(window.ColorPickers) do
            if picker then
                picker:Destroy()
            end
        end
        window.ColorPickers = {}
        
        local colorPicker = {
            Color = options.Default or Color3.new(1, 1, 1),
            Callback = options.Callback or function() end
        }
        
        local pickerFrame = Instance.new("Frame")
        pickerFrame.Name = "ColorPicker"
        pickerFrame.Size = UDim2.new(0, 260, 0, 300)
        pickerFrame.Position = UDim2.new(
            0,
            mainFrame.AbsolutePosition.X + mainFrame.AbsoluteSize.X + 12,
            0,
            mainFrame.AbsolutePosition.Y
        )
        pickerFrame.BackgroundColor3 = Theme.MainBackground
        pickerFrame.BorderSizePixel = 0
        pickerFrame.ZIndex = 2000
        pickerFrame.Parent = screenGui
        
        table.insert(window.ColorPickers, pickerFrame)
        
        local pickerCorner = Instance.new("UICorner")
        pickerCorner.CornerRadius = UDim.new(0, 8)
        pickerCorner.Parent = pickerFrame
        
        local pickerBorder = Instance.new("UIStroke")
        pickerBorder.Color = Theme.CheckboxBorder
        pickerBorder.Thickness = 1
        pickerBorder.Parent = pickerFrame
        
        local titleBar = Instance.new("Frame")
        titleBar.Size = UDim2.new(1, 0, 0, 28)
        titleBar.BackgroundColor3 = Theme.PanelBackground
        titleBar.BorderSizePixel = 0
        titleBar.Parent = pickerFrame
        
        local titleCorner = Instance.new("UICorner")
        titleCorner.CornerRadius = UDim.new(0, 8)
        titleCorner.Parent = titleBar
        
        local titleFix = Instance.new("Frame")
        titleFix.Size = UDim2.new(1, 0, 0, 8)
        titleFix.Position = UDim2.new(0, 0, 1, -8)
        titleFix.BackgroundColor3 = Theme.PanelBackground
        titleFix.BorderSizePixel = 0
        titleFix.Parent = titleBar
        
        local titleText = Instance.new("TextLabel")
        titleText.Text = "Color Picker"
        titleText.Size = UDim2.new(1, -28, 1, 0)
        titleText.BackgroundTransparency = 1
        titleText.TextColor3 = Theme.PrimaryText
        titleText.TextSize = 12
        titleText.Font = CurrentFont
        titleText.Parent = titleBar
        
        local closeButton = Instance.new("TextButton")
        closeButton.Size = UDim2.new(0, 20, 0, 20)
        closeButton.Position = UDim2.new(1, -24, 0.5, -10)
        closeButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
        closeButton.BackgroundTransparency = 0
        closeButton.BorderSizePixel = 0
        closeButton.Text = "×"
        closeButton.TextColor3 = Theme.SecondaryText
        closeButton.TextSize = 18
        closeButton.Font = Enum.Font.SourceSans
        closeButton.AutoButtonColor = false
        closeButton.Parent = titleBar
        
        local closeCorner = Instance.new("UICorner")
        closeCorner.CornerRadius = UDim.new(0, 4)
        closeCorner.Parent = closeButton
        
        closeButton.MouseButton1Click:Connect(function()
            pickerFrame:Destroy()
        end)
        
        closeButton.MouseEnter:Connect(function()
            closeButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
            closeButton.TextColor3 = Theme.PrimaryText
        end)
        
        closeButton.MouseLeave:Connect(function()
            closeButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
            closeButton.TextColor3 = Theme.SecondaryText
        end)
        
        MakeDraggable(pickerFrame, titleBar)
        
        -- HSV Implementation
        local satValFrame = Instance.new("ImageButton")
        satValFrame.Size = UDim2.new(0, 180, 0, 180)
        satValFrame.Position = UDim2.new(0, 12, 0, 38)
        satValFrame.BorderSizePixel = 0
        satValFrame.AutoButtonColor = false
        satValFrame.Parent = pickerFrame
        
        local satValCorner = Instance.new("UICorner")
        satValCorner.CornerRadius = UDim.new(0, 4)
        satValCorner.Parent = satValFrame
        
        local hueFrame = Instance.new("Frame")
        hueFrame.Size = UDim2.new(1, 0, 1, 0)
        hueFrame.BackgroundColor3 = Color3.fromHSV(0, 1, 1)
        hueFrame.BorderSizePixel = 0
        hueFrame.Parent = satValFrame
        
        local hueCorner = Instance.new("UICorner")
        hueCorner.CornerRadius = UDim.new(0, 4)
        hueCorner.Parent = hueFrame
        
        local satGradient = Instance.new("UIGradient")
        satGradient.Color = ColorSequence.new({
            ColorSequenceKeypoint.new(0, Color3.new(1, 1, 1)),
            ColorSequenceKeypoint.new(1, Color3.new(1, 1, 1))
        })
        satGradient.Transparency = NumberSequence.new({
            NumberSequenceKeypoint.new(0, 0),
            NumberSequenceKeypoint.new(1, 1)
        })
        satGradient.Rotation = 0
        satGradient.Parent = hueFrame
        
        local valFrame = Instance.new("Frame")
        valFrame.Size = UDim2.new(1, 0, 1, 0)
        valFrame.BackgroundTransparency = 1
        valFrame.BorderSizePixel = 0
        valFrame.Parent = satValFrame
        
        local valGradient = Instance.new("UIGradient")
        valGradient.Color = ColorSequence.new({
            ColorSequenceKeypoint.new(0, Color3.new(1, 1, 1)),
            ColorSequenceKeypoint.new(1, Color3.new(0, 0, 0))
        })
        valGradient.Rotation = 90
        valGradient.Parent = valFrame
        
        local valCorner2 = Instance.new("UICorner")
        valCorner2.CornerRadius = UDim.new(0, 4)
        valCorner2.Parent = valFrame
        
        local satValCursor = Instance.new("Frame")
        satValCursor.Size = UDim2.new(0, 8, 0, 8)
        satValCursor.Position = UDim2.new(0.5, -4, 0.5, -4)
        satValCursor.BackgroundColor3 = Color3.new(1, 1, 1)
        satValCursor.BorderSizePixel = 0
        satValCursor.ZIndex = 3
        satValCursor.Parent = satValFrame
        
        local cursorCorner = Instance.new("UICorner")
        cursorCorner.CornerRadius = UDim.new(1, 0)
        cursorCorner.Parent = satValCursor
        
        local cursorBorder = Instance.new("UIStroke")
        cursorBorder.Color = Color3.new(0, 0, 0)
        cursorBorder.Thickness = 2
        cursorBorder.Parent = satValCursor
        
        -- Hue Slider
        local hueSlider = Instance.new("ImageButton")
        hueSlider.Size = UDim2.new(0, 24, 0, 180)
        hueSlider.Position = UDim2.new(0, 204, 0, 38)
        hueSlider.BackgroundColor3 = Color3.new(1, 1, 1)
        hueSlider.BorderSizePixel = 0
        hueSlider.AutoButtonColor = false
        hueSlider.Parent = pickerFrame
        
        local hueSliderCorner = Instance.new("UICorner")
        hueSliderCorner.CornerRadius = UDim.new(0, 4)
        hueSliderCorner.Parent = hueSlider
        
        local hueGradient = Instance.new("UIGradient")
        hueGradient.Color = ColorSequence.new({
            ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 0, 0)),
            ColorSequenceKeypoint.new(0.167, Color3.fromRGB(255, 255, 0)),
            ColorSequenceKeypoint.new(0.333, Color3.fromRGB(0, 255, 0)),
            ColorSequenceKeypoint.new(0.5, Color3.fromRGB(0, 255, 255)),
            ColorSequenceKeypoint.new(0.667, Color3.fromRGB(0, 0, 255)),
            ColorSequenceKeypoint.new(0.833, Color3.fromRGB(255, 0, 255)),
            ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 0, 0))
        })
        hueGradient.Rotation = 90
        hueGradient.Parent = hueSlider
        
        local hueCursor = Instance.new("Frame")
        hueCursor.Size = UDim2.new(1, 4, 0, 4)
        hueCursor.Position = UDim2.new(0, -2, 0, -2)
        hueCursor.BackgroundColor3 = Color3.new(1, 1, 1)
        hueCursor.BorderSizePixel = 0
        hueCursor.Parent = hueSlider
        
        local hueCursorCorner = Instance.new("UICorner")
        hueCursorCorner.CornerRadius = UDim.new(0, 2)
        hueCursorCorner.Parent = hueCursor
        
        local hueCursorBorder = Instance.new("UIStroke")
        hueCursorBorder.Color = Color3.new(0, 0, 0)
        hueCursorBorder.Thickness = 1
        hueCursorBorder.Parent = hueCursor
        
        -- RGB/Hex inputs (simplified)
        local hue, sat, val = colorPicker.Color:ToHSV()
        
        local function updateColor()
            colorPicker.Color = Color3.fromHSV(hue, sat, val)
            hueFrame.BackgroundColor3 = Color3.fromHSV(hue, 1, 1)
            colorPicker.Callback(colorPicker.Color)
        end
        
        -- Color picker interaction
        local satValDragging = false
        local hueDragging = false
        
        satValFrame.MouseButton1Down:Connect(function()
            satValDragging = true
            local relativeX = math.clamp((Mouse.X - satValFrame.AbsolutePosition.X) / satValFrame.AbsoluteSize.X, 0, 1)
            local relativeY = math.clamp((Mouse.Y - satValFrame.AbsolutePosition.Y) / satValFrame.AbsoluteSize.Y, 0, 1)
            
            sat = relativeX
            val = 1 - relativeY
            
            satValCursor.Position = UDim2.new(relativeX, -4, relativeY, -4)
            updateColor()
        end)
        
        hueSlider.MouseButton1Down:Connect(function()
            hueDragging = true
            local relativeY = math.clamp((Mouse.Y - hueSlider.AbsolutePosition.Y) / hueSlider.AbsoluteSize.Y, 0, 1)
            
            hue = relativeY
            hueCursor.Position = UDim2.new(0, -2, relativeY, -2)
            updateColor()
        end)
        
        UserInputService.InputChanged:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement then
                if satValDragging then
                    local relativeX = math.clamp((Mouse.X - satValFrame.AbsolutePosition.X) / satValFrame.AbsoluteSize.X, 0, 1)
                    local relativeY = math.clamp((Mouse.Y - satValFrame.AbsolutePosition.Y) / satValFrame.AbsoluteSize.Y, 0, 1)
                    
                    sat = relativeX
                    val = 1 - relativeY
                    
                    satValCursor.Position = UDim2.new(relativeX, -4, relativeY, -4)
                    updateColor()
                elseif hueDragging then
                    local relativeY = math.clamp((Mouse.Y - hueSlider.AbsolutePosition.Y) / hueSlider.AbsoluteSize.Y, 0, 1)
                    
                    hue = relativeY
                    hueCursor.Position = UDim2.new(0, -2, relativeY, -2)
                    updateColor()
                end
            end
        end)
        
        UserInputService.InputEnded:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                satValDragging = false
                hueDragging = false
            end
        end)
        
        -- Initialize
        satValCursor.Position = UDim2.new(sat, -4, 1 - val, -4)
        hueCursor.Position = UDim2.new(0, -2, hue, -2)
        updateColor()
        
        return colorPicker
    end
    
    -- Toggle Window
    function window:Toggle()
        mainFrame.Visible = not mainFrame.Visible
        if not mainFrame.Visible then
            closeAllDropdowns()
        end
    end
    
    -- Keybind for toggle
    UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if not gameProcessed and input.KeyCode == toggleKey then
            window:Toggle()
        end
    end)
    
    return window
end

return PrimordialUI
